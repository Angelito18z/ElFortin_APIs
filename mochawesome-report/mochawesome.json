{
  "stats": {
    "suites": 19,
    "tests": 53,
    "passes": 45,
    "pending": 0,
    "failures": 8,
    "start": "2024-11-14T15:05:47.711Z",
    "end": "2024-11-14T15:05:48.274Z",
    "duration": 563,
    "testsRegistered": 95,
    "passPercent": 47.368421052631575,
    "pendingPercent": 0,
    "other": 6,
    "hasOther": true,
    "skipped": 42,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "c2f4bdd9-45f7-48a6-94a2-5ec7afdeb1b5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c363420-e538-4956-a596-7b96ad5b1d63",
          "title": "Pruebas de la API ventas",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\pedidos.test.js",
          "file": "\\test\\pedidos.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"before all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "getAll = await pedidosModelo.obtenerTodo();\n        getId = await pedidosModelo.obtenerVentaId(1);",
              "err": {
                "message": "TypeError: pedidosModelo.obtenerTodo is not a function",
                "estack": "TypeError: pedidosModelo.obtenerTodo is not a function\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/pedidos.test.js:11:39)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "8d9fadbf-7dcc-4795-9ddc-c5eebabd5025",
              "parentUUID": "9c363420-e538-4956-a596-7b96ad5b1d63",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"after all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "36883719-9d37-4998-bf58-9a690a8b5d52",
              "parentUUID": "9c363420-e538-4956-a596-7b96ad5b1d63",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3821fb65-a3cb-484c-94a2-7a387e8d6eef",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\pedidos.test.js",
              "file": "\\test\\pedidos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "a1a5e5b4-ae5e-4221-9684-cfe5868d2550",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "274fc26c-ad5d-45bd-8518-d98f4648aeb6",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "7072b9c1-7971-4ae7-8efb-3eb50f901941",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "fb0f406b-6de3-4cb7-9637-90432d66fbbb",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "60330af7-3cd8-4117-b756-dfe0bcfd44c8",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "a1a5e5b4-ae5e-4221-9684-cfe5868d2550",
                "274fc26c-ad5d-45bd-8518-d98f4648aeb6",
                "7072b9c1-7971-4ae7-8efb-3eb50f901941",
                "fb0f406b-6de3-4cb7-9637-90432d66fbbb",
                "60330af7-3cd8-4117-b756-dfe0bcfd44c8"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d548da6a-0868-4cf3-bda0-227c6fbf3bfe",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\pedidos.test.js",
              "file": "\\test\\pedidos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "eebb2e91-40b8-455f-8724-16f0629c5dd1",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "280a480b-9768-4c46-8392-dbc702622bcb",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "eebb2e91-40b8-455f-8724-16f0629c5dd1",
                "280a480b-9768-4c46-8392-dbc702622bcb"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "18daedec-6cb8-4f70-808c-9f5451434e62",
          "title": "Pruebas de la API ventas",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\productos.test.js",
          "file": "\\test\\productos.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"before all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "getAll = await productModel.obtenerTodo();\n        getId = await productModel.obtenerVentaId(1);",
              "err": {
                "message": "TypeError: productModel.obtenerTodo is not a function",
                "estack": "TypeError: productModel.obtenerTodo is not a function\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/productos.test.js:11:38)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "b4bc8ccf-5290-44e1-86ed-95aae256260c",
              "parentUUID": "18daedec-6cb8-4f70-808c-9f5451434e62",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"after all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "b43a7ceb-552b-4df0-93a2-a0587ac37aa3",
              "parentUUID": "18daedec-6cb8-4f70-808c-9f5451434e62",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "a3581d8b-740a-4183-bd9d-75a31b431bb8",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\productos.test.js",
              "file": "\\test\\productos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "0c4aad3e-bbd6-45a4-9166-affb613135cb",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "4bdaff3d-5be8-4710-8179-340b06aaac7e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "f296cdbf-9200-467b-a937-58e617ff00d1",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "fb5ff1fa-fd03-46c3-b7d6-10e68aa571cb",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "839b29d4-76bb-45f2-b876-d7061fe72bca",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "0c4aad3e-bbd6-45a4-9166-affb613135cb",
                "4bdaff3d-5be8-4710-8179-340b06aaac7e",
                "f296cdbf-9200-467b-a937-58e617ff00d1",
                "fb5ff1fa-fd03-46c3-b7d6-10e68aa571cb",
                "839b29d4-76bb-45f2-b876-d7061fe72bca"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4215e131-c2e0-40e5-a791-5a7931cdc653",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\productos.test.js",
              "file": "\\test\\productos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "b8151f2f-6c22-4770-9cdb-a489315fec63",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "2c288a50-de58-4d60-a255-2009d9e8737b",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "b8151f2f-6c22-4770-9cdb-a489315fec63",
                "2c288a50-de58-4d60-a255-2009d9e8737b"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "190d8d08-436e-452c-b4fc-49eedae6cdf3",
          "title": "Pruebas de la API ventas",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\promociones.test.js",
          "file": "\\test\\promociones.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"before all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 239,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "getAll = await promocionesModelo.obtenerTodo();\n        getId = await promocionesModelo.obtenerVentaId(1);",
              "err": {
                "message": "TypeError: promocionesModelo.obtenerVentaId is not a function",
                "estack": "TypeError: promocionesModelo.obtenerVentaId is not a function\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/promociones.test.js:12:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1dc098c2-527f-4928-812d-256133b648a9",
              "parentUUID": "190d8d08-436e-452c-b4fc-49eedae6cdf3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"after all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "7869c475-b9fb-4c9c-94a6-90ef5e49312b",
              "parentUUID": "190d8d08-436e-452c-b4fc-49eedae6cdf3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "4eea60c6-2aa5-42fa-9a07-e41d65d705f6",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\promociones.test.js",
              "file": "\\test\\promociones.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "6074466c-aa68-4537-b65b-4518d463aa3a",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "2c00a872-95cd-4d29-a13e-d2a9a3483604",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "5a60611f-92e7-4487-bee6-1deaf8ce4f09",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "5194f982-6106-4f8c-87af-97e661c3e5d9",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "3daf0b53-0b28-40c1-9a32-b580a461a230",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "6074466c-aa68-4537-b65b-4518d463aa3a",
                "2c00a872-95cd-4d29-a13e-d2a9a3483604",
                "5a60611f-92e7-4487-bee6-1deaf8ce4f09",
                "5194f982-6106-4f8c-87af-97e661c3e5d9",
                "3daf0b53-0b28-40c1-9a32-b580a461a230"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1b881a18-dabb-41e6-a3e7-fd8e18a840ac",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\promociones.test.js",
              "file": "\\test\\promociones.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "49be1da5-d3f0-4367-beba-8b731354d630",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "ad7cc64d-53a5-421e-9cd8-b3f28bb2214a",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "49be1da5-d3f0-4367-beba-8b731354d630",
                "ad7cc64d-53a5-421e-9cd8-b3f28bb2214a"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e76ff07-947b-437b-88a7-7bb49429601d",
          "title": "Pruebas de la API ventas",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\proveedores.test.js",
          "file": "\\test\\proveedores.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"before all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "getAll = await proveedoresModelo.obtenerTodo();\n        getId = await proveedoresModelo.obtenerVentaId(1);",
              "err": {
                "message": "TypeError: proveedoresModelo.obtenerVentaId is not a function",
                "estack": "TypeError: proveedoresModelo.obtenerVentaId is not a function\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/proveedores.test.js:12:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3e71ccbe-1819-4f7f-b9b0-6221321ea058",
              "parentUUID": "8e76ff07-947b-437b-88a7-7bb49429601d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"after all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "19b9678e-e67a-4ad3-ac6e-f317b5ff9275",
              "parentUUID": "8e76ff07-947b-437b-88a7-7bb49429601d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "4502c2d9-4b72-4294-a3bb-a6f8d7fe20ae",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\proveedores.test.js",
              "file": "\\test\\proveedores.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "2dd38d5e-5a73-4a95-87d6-f41df5bbc7b0",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "02a5464b-4dde-43e5-b011-1d0adc2d76a0",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "f9519c96-567d-42c7-9860-0a2959fae2dc",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "52b75dcf-aceb-4f8b-ae6c-e17a0ff31e77",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "527e4834-639f-42f2-94c6-4dec3457bb13",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "2dd38d5e-5a73-4a95-87d6-f41df5bbc7b0",
                "02a5464b-4dde-43e5-b011-1d0adc2d76a0",
                "f9519c96-567d-42c7-9860-0a2959fae2dc",
                "52b75dcf-aceb-4f8b-ae6c-e17a0ff31e77",
                "527e4834-639f-42f2-94c6-4dec3457bb13"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4513ef1a-c2f3-4f18-8053-6ae651c236c7",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\proveedores.test.js",
              "file": "\\test\\proveedores.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "8cde70c2-db24-4a39-91d8-7e3b6f4e59d4",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "6f24324c-bbf8-4956-b558-e57b5c110cac",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "8cde70c2-db24-4a39-91d8-7e3b6f4e59d4",
                "6f24324c-bbf8-4956-b558-e57b5c110cac"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebf3f7e4-9fd5-4256-b58e-94b737953ce2",
          "title": "Pruebas de la API ventas",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\restaurantes.test.js",
          "file": "\\test\\restaurantes.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"before all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 8,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "getAll = await restaurantesModelo.obtenerTodo();\n        getId = await restaurantesModelo.obtenerVentaId(1);",
              "err": {
                "message": "TypeError: restaurantesModelo.obtenerVentaId is not a function",
                "estack": "TypeError: restaurantesModelo.obtenerVentaId is not a function\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/restaurantes.test.js:12:42)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "70898e91-31ee-40b7-844e-3145d353a5a4",
              "parentUUID": "ebf3f7e4-9fd5-4256-b58e-94b737953ce2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"after all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "16620d36-a7b4-4f81-b844-621383d08182",
              "parentUUID": "ebf3f7e4-9fd5-4256-b58e-94b737953ce2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "17706e2c-394d-4c9c-b5ea-be9d4db81892",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\restaurantes.test.js",
              "file": "\\test\\restaurantes.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "4b40dc34-8233-428f-96fa-30e192755310",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "90aa8066-9a23-47e3-b50a-748530a39d1f",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "79393a8e-3b8f-44a6-afee-f6aa7726c446",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "8250c028-22fb-406d-80c4-ef12a90ad4cc",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "c7040c20-b325-4abd-b851-6c2af5b5fd60",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "4b40dc34-8233-428f-96fa-30e192755310",
                "90aa8066-9a23-47e3-b50a-748530a39d1f",
                "79393a8e-3b8f-44a6-afee-f6aa7726c446",
                "8250c028-22fb-406d-80c4-ef12a90ad4cc",
                "c7040c20-b325-4abd-b851-6c2af5b5fd60"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "091540f9-b888-4a58-9944-965483b172dc",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\restaurantes.test.js",
              "file": "\\test\\restaurantes.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "236398fc-48e4-4dfb-9348-49986d2081c5",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "e99e7718-f67a-4441-a28f-4e3d3bc3b4d7",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "236398fc-48e4-4dfb-9348-49986d2081c5",
                "e99e7718-f67a-4441-a28f-4e3d3bc3b4d7"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c94928ec-81d5-4bc8-a60b-f05d06dcffba",
          "title": "Pruebas de la API ventas",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\usuarios.test.js",
          "file": "\\test\\usuarios.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"before all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "getAll = await usuariosModel.obtenerTodo();\n        getId = await usuariosModel.obtenerVentaId(1);",
              "err": {
                "message": "TypeError: usuariosModel.obtenerTodo is not a function",
                "estack": "TypeError: usuariosModel.obtenerTodo is not a function\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/usuarios.test.js:11:39)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "d14fc552-f222-4429-aa2f-3fe4860da5e2",
              "parentUUID": "c94928ec-81d5-4bc8-a60b-f05d06dcffba",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"after all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "55d2b419-211a-4b1e-bf3c-d59ca34ac83a",
              "parentUUID": "c94928ec-81d5-4bc8-a60b-f05d06dcffba",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "014e20e5-d968-40e2-9b52-cfe505b70cbf",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\usuarios.test.js",
              "file": "\\test\\usuarios.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "bbd5683c-015f-4ea7-8342-f1d974c60553",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "36eba9e0-8177-4e45-a084-281fe1bb5519",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "88e8d4b4-45a4-4e3f-b235-d0a778c87c3a",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "7cd7af07-2bdd-4e50-a4d1-b2e99837d329",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "39ff01ea-9df6-4587-ad3b-c01919a4eaf6",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "bbd5683c-015f-4ea7-8342-f1d974c60553",
                "36eba9e0-8177-4e45-a084-281fe1bb5519",
                "88e8d4b4-45a4-4e3f-b235-d0a778c87c3a",
                "7cd7af07-2bdd-4e50-a4d1-b2e99837d329",
                "39ff01ea-9df6-4587-ad3b-c01919a4eaf6"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "925863eb-686d-421d-a274-60b9fdc747e4",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\usuarios.test.js",
              "file": "\\test\\usuarios.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "324f46f7-1a65-43a9-9d3b-0da361006d64",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "db1e5e5c-a548-4345-8618-b08ed01a2e0e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "324f46f7-1a65-43a9-9d3b-0da361006d64",
                "db1e5e5c-a548-4345-8618-b08ed01a2e0e"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b3ba0bf-4bf9-4bdc-939e-295ca58e870c",
          "title": "Validation Functions",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
          "file": "\\test\\validations.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5b001338-6b8c-4709-a9fd-e8c0133438d8",
              "title": "SQL Injection Prevention (hasUnsafeCharacters)",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if input contains single quotes",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains single quotes",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters(\"O'Reilly\")).to.be.true;",
                  "err": {},
                  "uuid": "805bd2ab-d9a0-4f18-8baa-152ff86efb24",
                  "parentUUID": "5b001338-6b8c-4709-a9fd-e8c0133438d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains double quotes",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains double quotes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('He said \"Hello\"')).to.be.true;",
                  "err": {},
                  "uuid": "1e6d4423-d625-49d9-80ee-a8d2d269d0ed",
                  "parentUUID": "5b001338-6b8c-4709-a9fd-e8c0133438d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains backslash",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains backslash",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('C:\\\\Windows')).to.be.true;",
                  "err": {},
                  "uuid": "4dc4a9ca-9403-4cfb-8d01-bce57dbb3077",
                  "parentUUID": "5b001338-6b8c-4709-a9fd-e8c0133438d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains semicolon",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains semicolon",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('DROP TABLE users;')).to.be.true;",
                  "err": {},
                  "uuid": "92700266-85be-4f9c-b60f-a34d712d25a8",
                  "parentUUID": "5b001338-6b8c-4709-a9fd-e8c0133438d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains double dash",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains double dash",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('SELECT * FROM users --')).to.be.true;",
                  "err": {},
                  "uuid": "fd6cb576-3cff-4605-83aa-7aa352bac1e8",
                  "parentUUID": "5b001338-6b8c-4709-a9fd-e8c0133438d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for safe input",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return false for safe input",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('SafeInput123')).to.be.false;",
                  "err": {},
                  "uuid": "434cb807-ed87-4cc5-8ada-77ce19b01a59",
                  "parentUUID": "5b001338-6b8c-4709-a9fd-e8c0133438d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "805bd2ab-d9a0-4f18-8baa-152ff86efb24",
                "1e6d4423-d625-49d9-80ee-a8d2d269d0ed",
                "4dc4a9ca-9403-4cfb-8d01-bce57dbb3077",
                "92700266-85be-4f9c-b60f-a34d712d25a8",
                "fd6cb576-3cff-4605-83aa-7aa352bac1e8",
                "434cb807-ed87-4cc5-8ada-77ce19b01a59"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "df29e023-972e-46b5-ba8a-99e16aaef0cf",
              "title": "Category Name Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid category name",
                  "fullTitle": "Validation Functions Category Name Validation should return true for a valid category name",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('Desserts')).to.be.true;",
                  "err": {},
                  "uuid": "aaa3bef4-144a-4e80-9603-b6fbea749854",
                  "parentUUID": "df29e023-972e-46b5-ba8a-99e16aaef0cf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a name with special characters",
                  "fullTitle": "Validation Functions Category Name Validation should return false for a name with special characters",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName(\"Cakes@2024\")).to.be.false;",
                  "err": {
                    "message": "AssertionError: expected true to be false",
                    "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:32:71)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "826e9d0d-879b-4d5d-93e9-8671bbbf9e45",
                  "parentUUID": "df29e023-972e-46b5-ba8a-99e16aaef0cf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an empty string",
                  "fullTitle": "Validation Functions Category Name Validation should return false for an empty string",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('')).to.be.false;",
                  "err": {},
                  "uuid": "304c7f5d-8800-45db-a33d-3e8fd0bc2871",
                  "parentUUID": "df29e023-972e-46b5-ba8a-99e16aaef0cf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a name exceeding 50 characters",
                  "fullTitle": "Validation Functions Category Name Validation should return false for a name exceeding 50 characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('a'.repeat(51))).to.be.false;",
                  "err": {},
                  "uuid": "d9dae4c5-3b46-469d-8cb3-0dfc7bf21f17",
                  "parentUUID": "df29e023-972e-46b5-ba8a-99e16aaef0cf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a name with exactly 50 characters",
                  "fullTitle": "Validation Functions Category Name Validation should return true for a name with exactly 50 characters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('a'.repeat(50))).to.be.true;",
                  "err": {},
                  "uuid": "30dd4713-6fcc-4b6d-93b2-04f72626e949",
                  "parentUUID": "df29e023-972e-46b5-ba8a-99e16aaef0cf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aaa3bef4-144a-4e80-9603-b6fbea749854",
                "304c7f5d-8800-45db-a33d-3e8fd0bc2871",
                "d9dae4c5-3b46-469d-8cb3-0dfc7bf21f17",
                "30dd4713-6fcc-4b6d-93b2-04f72626e949"
              ],
              "failures": [
                "826e9d0d-879b-4d5d-93e9-8671bbbf9e45"
              ],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "24ae689e-bd61-4369-a267-c38120aa7ba6",
              "title": "Email Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid email address",
                  "fullTitle": "Validation Functions Email Validation should return true for a valid email address",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test@example.com')).to.be.true;",
                  "err": {},
                  "uuid": "7a304845-9fa3-4694-b0e3-bce245a35209",
                  "parentUUID": "24ae689e-bd61-4369-a267-c38120aa7ba6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email without \"@\"",
                  "fullTitle": "Validation Functions Email Validation should return false for an email without \"@\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('testexample.com')).to.be.false;",
                  "err": {},
                  "uuid": "efcf15b9-e4d6-4e9e-bd59-ea94531b8348",
                  "parentUUID": "24ae689e-bd61-4369-a267-c38120aa7ba6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email without domain",
                  "fullTitle": "Validation Functions Email Validation should return false for an email without domain",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test@.com')).to.be.false;",
                  "err": {},
                  "uuid": "8a30a852-5f6e-4032-8949-76be9d71e633",
                  "parentUUID": "24ae689e-bd61-4369-a267-c38120aa7ba6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email with spaces",
                  "fullTitle": "Validation Functions Email Validation should return false for an email with spaces",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test @example.com')).to.be.false;",
                  "err": {},
                  "uuid": "c1cfcc2b-93a1-4aa0-a6b3-516309667cb5",
                  "parentUUID": "24ae689e-bd61-4369-a267-c38120aa7ba6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email with SQL injection characters",
                  "fullTitle": "Validation Functions Email Validation should return false for an email with SQL injection characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test@example.com; DROP TABLE users;')).to.be.false;",
                  "err": {},
                  "uuid": "f7544d1c-a86f-4b9a-a09b-8ea52ff63b58",
                  "parentUUID": "24ae689e-bd61-4369-a267-c38120aa7ba6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a304845-9fa3-4694-b0e3-bce245a35209",
                "efcf15b9-e4d6-4e9e-bd59-ea94531b8348",
                "8a30a852-5f6e-4032-8949-76be9d71e633",
                "c1cfcc2b-93a1-4aa0-a6b3-516309667cb5",
                "f7544d1c-a86f-4b9a-a09b-8ea52ff63b58"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5b669365-fa65-4c34-a5ae-faa48feab94d",
              "title": "Password Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid password",
                  "fullTitle": "Validation Functions Password Validation should return true for a valid password",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('SecurePass123!')).to.be.true;",
                  "err": {
                    "message": "AssertionError: expected false to be true",
                    "estack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:67:71)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- false\n+ true\n"
                  },
                  "uuid": "4cdfdb9b-c1fe-4c12-9a45-a52bcfb59290",
                  "parentUUID": "5b669365-fa65-4c34-a5ae-faa48feab94d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password shorter than 8 characters",
                  "fullTitle": "Validation Functions Password Validation should return false for a password shorter than 8 characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('Short1')).to.be.false;",
                  "err": {},
                  "uuid": "063be019-d5bb-490a-915d-2adbc0ba8542",
                  "parentUUID": "5b669365-fa65-4c34-a5ae-faa48feab94d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password longer than 20 characters",
                  "fullTitle": "Validation Functions Password Validation should return false for a password longer than 20 characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('a'.repeat(21))).to.be.false;",
                  "err": {},
                  "uuid": "73f58c4d-9794-4981-a297-843d7abbf8e1",
                  "parentUUID": "5b669365-fa65-4c34-a5ae-faa48feab94d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password without numbers",
                  "fullTitle": "Validation Functions Password Validation should return false for a password without numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('PasswordOnly')).to.be.false;",
                  "err": {},
                  "uuid": "3d9aae2c-7ff5-49ad-9748-87e2e2052dac",
                  "parentUUID": "5b669365-fa65-4c34-a5ae-faa48feab94d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password with spaces",
                  "fullTitle": "Validation Functions Password Validation should return false for a password with spaces",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('Pass word123')).to.be.false;",
                  "err": {},
                  "uuid": "332c896e-ab96-415d-9281-29ec33a887bd",
                  "parentUUID": "5b669365-fa65-4c34-a5ae-faa48feab94d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password with SQL injection patterns",
                  "fullTitle": "Validation Functions Password Validation should return false for a password with SQL injection patterns",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('Passw0rd;--')).to.be.false;",
                  "err": {},
                  "uuid": "ff45893b-bc32-42db-b649-ae558b8c42b3",
                  "parentUUID": "5b669365-fa65-4c34-a5ae-faa48feab94d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "063be019-d5bb-490a-915d-2adbc0ba8542",
                "73f58c4d-9794-4981-a297-843d7abbf8e1",
                "3d9aae2c-7ff5-49ad-9748-87e2e2052dac",
                "332c896e-ab96-415d-9281-29ec33a887bd",
                "ff45893b-bc32-42db-b649-ae558b8c42b3"
              ],
              "failures": [
                "4cdfdb9b-c1fe-4c12-9a45-a52bcfb59290"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f7257acc-1b4a-4f79-af54-636ed7011ae2",
              "title": "Phone Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid 10-digit phone number",
                  "fullTitle": "Validation Functions Phone Validation should return true for a valid 10-digit phone number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('1234567890')).to.be.true;",
                  "err": {},
                  "uuid": "82c0fa1e-4e35-4c85-b909-6d1d76b137c5",
                  "parentUUID": "f7257acc-1b4a-4f79-af54-636ed7011ae2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number with letters",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number with letters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('123ABC7890')).to.be.false;",
                  "err": {},
                  "uuid": "9d2ca64a-0fcb-4750-8b25-121cd9fc0d84",
                  "parentUUID": "f7257acc-1b4a-4f79-af54-636ed7011ae2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number with special characters",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number with special characters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('123-456-7890')).to.be.false;",
                  "err": {},
                  "uuid": "fd9c5172-ccf7-4fe1-88eb-8525c215058f",
                  "parentUUID": "f7257acc-1b4a-4f79-af54-636ed7011ae2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number shorter than 10 digits",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number shorter than 10 digits",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('12345')).to.be.false;",
                  "err": {},
                  "uuid": "14bd6b63-b77f-4ab2-97c8-bb4c6599629c",
                  "parentUUID": "f7257acc-1b4a-4f79-af54-636ed7011ae2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number longer than 10 digits",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number longer than 10 digits",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('123456789012')).to.be.false;",
                  "err": {
                    "message": "AssertionError: expected true to be false",
                    "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:101:66)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "96fa6702-2a43-43fc-b32b-6b84fd788245",
                  "parentUUID": "f7257acc-1b4a-4f79-af54-636ed7011ae2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82c0fa1e-4e35-4c85-b909-6d1d76b137c5",
                "9d2ca64a-0fcb-4750-8b25-121cd9fc0d84",
                "fd9c5172-ccf7-4fe1-88eb-8525c215058f",
                "14bd6b63-b77f-4ab2-97c8-bb4c6599629c"
              ],
              "failures": [
                "96fa6702-2a43-43fc-b32b-6b84fd788245"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b84b4806-e69f-4e2a-8c7f-b4829e0cf30b",
              "title": "Price Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid price",
                  "fullTitle": "Validation Functions Price Validation should return true for a valid price",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice(99.99)).to.be.true;",
                  "err": {},
                  "uuid": "b47053be-35e7-4d0d-ab7b-f2d9869d382c",
                  "parentUUID": "b84b4806-e69f-4e2a-8c7f-b4829e0cf30b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a negative price",
                  "fullTitle": "Validation Functions Price Validation should return false for a negative price",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice(-9.99)).to.be.false;",
                  "err": {},
                  "uuid": "aada908f-ba5e-4117-915e-1eb72008d8e7",
                  "parentUUID": "b84b4806-e69f-4e2a-8c7f-b4829e0cf30b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a price of 0",
                  "fullTitle": "Validation Functions Price Validation should return true for a price of 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice(0)).to.be.true;",
                  "err": {},
                  "uuid": "f2218449-6e5f-44ae-8b61-eb6fdc95f4d6",
                  "parentUUID": "b84b4806-e69f-4e2a-8c7f-b4829e0cf30b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-numeric input",
                  "fullTitle": "Validation Functions Price Validation should return false for non-numeric input",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice('fifty')).to.be.false;",
                  "err": {},
                  "uuid": "cd0e0c31-014c-4ab9-b050-18fdcb8871ab",
                  "parentUUID": "b84b4806-e69f-4e2a-8c7f-b4829e0cf30b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b47053be-35e7-4d0d-ab7b-f2d9869d382c",
                "aada908f-ba5e-4117-915e-1eb72008d8e7",
                "f2218449-6e5f-44ae-8b61-eb6fdc95f4d6",
                "cd0e0c31-014c-4ab9-b050-18fdcb8871ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f6bb965e-8035-4e25-a6e7-f54bfb492961",
              "title": "Rating Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid rating of 1",
                  "fullTitle": "Validation Functions Rating Validation should return true for a valid rating of 1",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(1)).to.be.true;",
                  "err": {},
                  "uuid": "6297736e-2fa4-4e53-9c46-10605e943fa6",
                  "parentUUID": "f6bb965e-8035-4e25-a6e7-f54bfb492961",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a valid rating of 5",
                  "fullTitle": "Validation Functions Rating Validation should return true for a valid rating of 5",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(5)).to.be.true;",
                  "err": {},
                  "uuid": "949e3dc7-b8ac-40db-99d8-48a7f671241e",
                  "parentUUID": "f6bb965e-8035-4e25-a6e7-f54bfb492961",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a rating less than 1",
                  "fullTitle": "Validation Functions Rating Validation should return false for a rating less than 1",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(0)).to.be.false;",
                  "err": {},
                  "uuid": "2aa66773-12c3-48d9-9d10-1acc6d65593a",
                  "parentUUID": "f6bb965e-8035-4e25-a6e7-f54bfb492961",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a rating greater than 5",
                  "fullTitle": "Validation Functions Rating Validation should return false for a rating greater than 5",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(6)).to.be.false;",
                  "err": {},
                  "uuid": "aa32b665-c6d7-47da-b7b9-d88ed98d16cc",
                  "parentUUID": "f6bb965e-8035-4e25-a6e7-f54bfb492961",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a decimal rating",
                  "fullTitle": "Validation Functions Rating Validation should return false for a decimal rating",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(4.5)).to.be.false;",
                  "err": {},
                  "uuid": "740883cc-9f98-416c-ad38-6f39b1d7a9a2",
                  "parentUUID": "f6bb965e-8035-4e25-a6e7-f54bfb492961",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-numeric rating",
                  "fullTitle": "Validation Functions Rating Validation should return false for non-numeric rating",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating('excellent')).to.be.false;",
                  "err": {},
                  "uuid": "0928d13b-f79a-4672-9659-c7dde7d3acc9",
                  "parentUUID": "f6bb965e-8035-4e25-a6e7-f54bfb492961",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6297736e-2fa4-4e53-9c46-10605e943fa6",
                "949e3dc7-b8ac-40db-99d8-48a7f671241e",
                "2aa66773-12c3-48d9-9d10-1acc6d65593a",
                "aa32b665-c6d7-47da-b7b9-d88ed98d16cc",
                "740883cc-9f98-416c-ad38-6f39b1d7a9a2",
                "0928d13b-f79a-4672-9659-c7dde7d3acc9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "91455d58-d6b4-49ad-a232-6d7c8e4712ae",
              "title": "Date Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid date",
                  "fullTitle": "Validation Functions Date Validation should return true for a valid date",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('2024-12-31')).to.be.true;",
                  "err": {
                    "message": "AssertionError: expected false to be true",
                    "estack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:146:63)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- false\n+ true\n"
                  },
                  "uuid": "59973d74-dfd6-4e0c-8fad-a7aa23e7b624",
                  "parentUUID": "91455d58-d6b4-49ad-a232-6d7c8e4712ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an invalid date format",
                  "fullTitle": "Validation Functions Date Validation should return false for an invalid date format",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('31/12/2024')).to.be.false;",
                  "err": {},
                  "uuid": "49b8c486-eb5a-444c-bcc0-348180f8e484",
                  "parentUUID": "91455d58-d6b4-49ad-a232-6d7c8e4712ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a non-existent date",
                  "fullTitle": "Validation Functions Date Validation should return false for a non-existent date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('2024-02-30')).to.be.false;",
                  "err": {},
                  "uuid": "30a9e678-2390-486d-9e39-fbad78110b72",
                  "parentUUID": "91455d58-d6b4-49ad-a232-6d7c8e4712ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-date strings",
                  "fullTitle": "Validation Functions Date Validation should return false for non-date strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('not-a-date')).to.be.false;",
                  "err": {},
                  "uuid": "fda6f017-7a6a-4cfd-b3bd-6ea2c05c753c",
                  "parentUUID": "91455d58-d6b4-49ad-a232-6d7c8e4712ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49b8c486-eb5a-444c-bcc0-348180f8e484",
                "30a9e678-2390-486d-9e39-fbad78110b72",
                "fda6f017-7a6a-4cfd-b3bd-6ea2c05c753c"
              ],
              "failures": [
                "59973d74-dfd6-4e0c-8fad-a7aa23e7b624"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f7760410-8036-4361-bdbf-a3f50d7fc28a",
              "title": "Integer Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid positive integer",
                  "fullTitle": "Validation Functions Integer Validation should return true for a valid positive integer",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(42)).to.be.true;",
                  "err": {},
                  "uuid": "3d800a05-d213-4af7-957e-97269e1de25b",
                  "parentUUID": "f7760410-8036-4361-bdbf-a3f50d7fc28a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for zero",
                  "fullTitle": "Validation Functions Integer Validation should return true for zero",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(0)).to.be.true;",
                  "err": {},
                  "uuid": "539b68c4-4019-48d5-8d0a-a20beb2363cd",
                  "parentUUID": "f7760410-8036-4361-bdbf-a3f50d7fc28a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a negative integer",
                  "fullTitle": "Validation Functions Integer Validation should return false for a negative integer",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(-5)).to.be.false;",
                  "err": {
                    "message": "AssertionError: expected true to be false",
                    "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:168:56)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "dda85563-ebd3-4b30-935b-9dad31bfb5ce",
                  "parentUUID": "f7760410-8036-4361-bdbf-a3f50d7fc28a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a decimal number",
                  "fullTitle": "Validation Functions Integer Validation should return false for a decimal number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(42.5)).to.be.false;",
                  "err": {},
                  "uuid": "6dd07652-4d70-42a0-9635-1a6866980278",
                  "parentUUID": "f7760410-8036-4361-bdbf-a3f50d7fc28a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-numeric input",
                  "fullTitle": "Validation Functions Integer Validation should return false for non-numeric input",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger('forty-two')).to.be.false;",
                  "err": {},
                  "uuid": "3bf99b69-6d8b-48f6-88d9-5693c671de00",
                  "parentUUID": "f7760410-8036-4361-bdbf-a3f50d7fc28a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d800a05-d213-4af7-957e-97269e1de25b",
                "539b68c4-4019-48d5-8d0a-a20beb2363cd",
                "6dd07652-4d70-42a0-9635-1a6866980278",
                "3bf99b69-6d8b-48f6-88d9-5693c671de00"
              ],
              "failures": [
                "dda85563-ebd3-4b30-935b-9dad31bfb5ce"
              ],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8cbbad3e-98e2-4703-9054-358c50fe2d06",
          "title": "Pruebas de la API ventas",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\ventas.test.js",
          "file": "\\test\\ventas.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"before all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 36,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await ventasModel.obtenerTodo();\n        getId = await ventasModel.obtenerVentaId(1);",
              "err": {},
              "uuid": "854640f5-8dd0-4b99-9fc3-e3fc399061aa",
              "parentUUID": "8cbbad3e-98e2-4703-9054-358c50fe2d06",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"after all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "5644059d-1d66-43fd-aa80-bf61826f5cfa",
              "parentUUID": "8cbbad3e-98e2-4703-9054-358c50fe2d06",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "5eea17f8-eabb-464f-b4de-ad2d9da2e275",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\ventas.test.js",
              "file": "\\test\\ventas.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "6f5bc70b-f549-4e3a-a676-2be0459c5af8",
                  "parentUUID": "5eea17f8-eabb-464f-b4de-ad2d9da2e275",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/ventas.test.js:27:38)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "431d1b9e-81b7-461a-88f5-ce35f259a01d",
                  "parentUUID": "5eea17f8-eabb-464f-b4de-ad2d9da2e275",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el c贸digo de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 69,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "8f46c6da-867d-4952-b293-f65726b0ec7a",
                  "parentUUID": "5eea17f8-eabb-464f-b4de-ad2d9da2e275",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el c贸digo de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "898998ff-a1e5-4b3a-9437-3a23d68e24b5",
                  "parentUUID": "5eea17f8-eabb-464f-b4de-ad2d9da2e275",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {
                    "message": "AssertionError: Target cannot be null or undefined.",
                    "estack": "AssertionError: Target cannot be null or undefined.\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/ventas.test.js:39:40)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "34c6be6c-10fe-44e4-b476-e3a95d37927a",
                  "parentUUID": "5eea17f8-eabb-464f-b4de-ad2d9da2e275",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f5bc70b-f549-4e3a-a676-2be0459c5af8",
                "8f46c6da-867d-4952-b293-f65726b0ec7a",
                "898998ff-a1e5-4b3a-9437-3a23d68e24b5"
              ],
              "failures": [
                "431d1b9e-81b7-461a-88f5-ce35f259a01d",
                "34c6be6c-10fe-44e4-b476-e3a95d37927a"
              ],
              "pending": [],
              "skipped": [],
              "duration": 92,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cd3a78ba-698c-45fb-9c1c-8ed3d1490f05",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\ventas.test.js",
              "file": "\\test\\ventas.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/ventas.test.js:53:33)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "b9736bef-fd07-4012-9655-9b3e20d62c6f",
                  "parentUUID": "cd3a78ba-698c-45fb-9c1c-8ed3d1490f05",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "4fbc2f83-5a8c-48f6-95d0-1dc6d6aac009",
                  "parentUUID": "cd3a78ba-698c-45fb-9c1c-8ed3d1490f05",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4fbc2f83-5a8c-48f6-95d0-1dc6d6aac009"
              ],
              "failures": [
                "b9736bef-fd07-4012-9655-9b3e20d62c6f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}