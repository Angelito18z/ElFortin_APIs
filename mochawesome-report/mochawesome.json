{
  "stats": {
    "suites": 38,
    "tests": 102,
    "passes": 99,
    "pending": 0,
    "failures": 3,
    "start": "2024-11-28T07:17:47.112Z",
    "end": "2024-11-28T07:17:47.254Z",
    "duration": 142,
    "testsRegistered": 102,
    "passPercent": 97.05882352941177,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f2d02a19-8bd8-424c-849f-4cd0b07a520d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8f476168-2844-4c7a-95fb-532f768bf7a7",
          "title": "Validation Functions",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
          "file": "\\test\\functional\\validations.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6753f1b1-3143-4f9b-9f8e-245ca917b8db",
              "title": "SQL Injection Prevention (hasUnsafeCharacters)",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
              "file": "\\test\\functional\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if input contains single quotes",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains single quotes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters(\"O'Reilly\")).to.be.true;",
                  "err": {},
                  "uuid": "884acba6-6b7c-4c3a-bbfd-30001ad2b8a5",
                  "parentUUID": "6753f1b1-3143-4f9b-9f8e-245ca917b8db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains double quotes",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains double quotes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('He said \"Hello\"')).to.be.true;",
                  "err": {},
                  "uuid": "6eb2fa06-f87f-44ab-923d-12ee43b27c07",
                  "parentUUID": "6753f1b1-3143-4f9b-9f8e-245ca917b8db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains backslash",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains backslash",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('C:\\\\Windows')).to.be.true;",
                  "err": {},
                  "uuid": "db85bdf8-44a4-45c2-903e-2880b1beed70",
                  "parentUUID": "6753f1b1-3143-4f9b-9f8e-245ca917b8db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains semicolon",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains semicolon",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('DROP TABLE users;')).to.be.true;",
                  "err": {},
                  "uuid": "c5303f8f-260d-4b1b-a089-6a1a48c9998e",
                  "parentUUID": "6753f1b1-3143-4f9b-9f8e-245ca917b8db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains double dash",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains double dash",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('SELECT * FROM users --')).to.be.true;",
                  "err": {},
                  "uuid": "96ccd7cb-dc17-47a3-a62d-a6fcefb383d5",
                  "parentUUID": "6753f1b1-3143-4f9b-9f8e-245ca917b8db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for safe input",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return false for safe input",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('SafeInput123')).to.be.false;",
                  "err": {},
                  "uuid": "7fc5b73b-80d9-418e-9b10-1500f3ceab1a",
                  "parentUUID": "6753f1b1-3143-4f9b-9f8e-245ca917b8db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "884acba6-6b7c-4c3a-bbfd-30001ad2b8a5",
                "6eb2fa06-f87f-44ab-923d-12ee43b27c07",
                "db85bdf8-44a4-45c2-903e-2880b1beed70",
                "c5303f8f-260d-4b1b-a089-6a1a48c9998e",
                "96ccd7cb-dc17-47a3-a62d-a6fcefb383d5",
                "7fc5b73b-80d9-418e-9b10-1500f3ceab1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a48c7948-463e-42fa-8775-09d49de98500",
              "title": "Category Name Validation",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
              "file": "\\test\\functional\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid category name",
                  "fullTitle": "Validation Functions Category Name Validation should return true for a valid category name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('Desserts')).to.be.true;",
                  "err": {},
                  "uuid": "32779564-8511-4c09-b70c-ceee8fc13889",
                  "parentUUID": "a48c7948-463e-42fa-8775-09d49de98500",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a name with special characters",
                  "fullTitle": "Validation Functions Category Name Validation should return false for a name with special characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName(\"Cakes@2024\")).to.be.false;",
                  "err": {},
                  "uuid": "45433e91-6e9b-4cb7-996d-e5a415baeb19",
                  "parentUUID": "a48c7948-463e-42fa-8775-09d49de98500",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an empty string",
                  "fullTitle": "Validation Functions Category Name Validation should return false for an empty string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('')).to.be.false;",
                  "err": {},
                  "uuid": "b11fe56d-12f5-4bad-bcc4-124d7b195b62",
                  "parentUUID": "a48c7948-463e-42fa-8775-09d49de98500",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a name exceeding 50 characters",
                  "fullTitle": "Validation Functions Category Name Validation should return false for a name exceeding 50 characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('a'.repeat(51))).to.be.false;",
                  "err": {},
                  "uuid": "81d3d7fd-c557-481e-8c49-25f0516c1ccc",
                  "parentUUID": "a48c7948-463e-42fa-8775-09d49de98500",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a name with exactly 50 characters",
                  "fullTitle": "Validation Functions Category Name Validation should return true for a name with exactly 50 characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('a'.repeat(50))).to.be.true;",
                  "err": {},
                  "uuid": "6f981813-bd6c-444e-803b-adc53b93ef06",
                  "parentUUID": "a48c7948-463e-42fa-8775-09d49de98500",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32779564-8511-4c09-b70c-ceee8fc13889",
                "45433e91-6e9b-4cb7-996d-e5a415baeb19",
                "b11fe56d-12f5-4bad-bcc4-124d7b195b62",
                "81d3d7fd-c557-481e-8c49-25f0516c1ccc",
                "6f981813-bd6c-444e-803b-adc53b93ef06"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f4c9ae0e-6b4a-4944-9789-2adb2f6f615f",
              "title": "Email Validation",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
              "file": "\\test\\functional\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid email address",
                  "fullTitle": "Validation Functions Email Validation should return true for a valid email address",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test@example.com')).to.be.true;",
                  "err": {},
                  "uuid": "e58903cc-f803-4ab3-9522-e9aa9c5ea81d",
                  "parentUUID": "f4c9ae0e-6b4a-4944-9789-2adb2f6f615f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email without \"@\"",
                  "fullTitle": "Validation Functions Email Validation should return false for an email without \"@\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('testexample.com')).to.be.false;",
                  "err": {},
                  "uuid": "a987a9a6-849c-40fd-b556-be7d38dbd49e",
                  "parentUUID": "f4c9ae0e-6b4a-4944-9789-2adb2f6f615f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email without domain",
                  "fullTitle": "Validation Functions Email Validation should return false for an email without domain",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test@.com')).to.be.false;",
                  "err": {},
                  "uuid": "0e1a2c6b-b3f0-4d6b-b045-ccd142226899",
                  "parentUUID": "f4c9ae0e-6b4a-4944-9789-2adb2f6f615f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email with spaces",
                  "fullTitle": "Validation Functions Email Validation should return false for an email with spaces",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test @example.com')).to.be.false;",
                  "err": {},
                  "uuid": "2a225523-07e8-4864-b610-755cd40b93c7",
                  "parentUUID": "f4c9ae0e-6b4a-4944-9789-2adb2f6f615f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email with SQL injection characters",
                  "fullTitle": "Validation Functions Email Validation should return false for an email with SQL injection characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test@example.com; DROP TABLE users;')).to.be.false;",
                  "err": {},
                  "uuid": "ecb2cba2-c1c3-4d94-9f3b-01fb05acf1d0",
                  "parentUUID": "f4c9ae0e-6b4a-4944-9789-2adb2f6f615f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e58903cc-f803-4ab3-9522-e9aa9c5ea81d",
                "a987a9a6-849c-40fd-b556-be7d38dbd49e",
                "0e1a2c6b-b3f0-4d6b-b045-ccd142226899",
                "2a225523-07e8-4864-b610-755cd40b93c7",
                "ecb2cba2-c1c3-4d94-9f3b-01fb05acf1d0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "251fbc97-a65b-4f65-b9c2-33a252d89ba2",
              "title": "Password Validation",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
              "file": "\\test\\functional\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid password",
                  "fullTitle": "Validation Functions Password Validation should return true for a valid password",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('SecurePass123!')).to.be.true;",
                  "err": {},
                  "uuid": "23fa541c-ce11-4aa7-b39d-e71e3fc13a58",
                  "parentUUID": "251fbc97-a65b-4f65-b9c2-33a252d89ba2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password shorter than 8 characters",
                  "fullTitle": "Validation Functions Password Validation should return false for a password shorter than 8 characters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('Short1')).to.be.false;",
                  "err": {},
                  "uuid": "7fa53a2f-a113-4a8b-8ede-3fe6f7680039",
                  "parentUUID": "251fbc97-a65b-4f65-b9c2-33a252d89ba2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password longer than 20 characters",
                  "fullTitle": "Validation Functions Password Validation should return false for a password longer than 20 characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('a'.repeat(21))).to.be.false;",
                  "err": {},
                  "uuid": "70aa3fa4-81e0-4fb1-bf77-ccd4ca2bc766",
                  "parentUUID": "251fbc97-a65b-4f65-b9c2-33a252d89ba2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password without numbers",
                  "fullTitle": "Validation Functions Password Validation should return false for a password without numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('PasswordOnly')).to.be.false;",
                  "err": {},
                  "uuid": "e83c25df-3248-4bea-a144-4f43d492483f",
                  "parentUUID": "251fbc97-a65b-4f65-b9c2-33a252d89ba2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password with spaces",
                  "fullTitle": "Validation Functions Password Validation should return false for a password with spaces",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('Pass word123')).to.be.false;",
                  "err": {},
                  "uuid": "7faae125-7f06-47fe-90ab-d81743c9c6ed",
                  "parentUUID": "251fbc97-a65b-4f65-b9c2-33a252d89ba2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password with SQL injection patterns",
                  "fullTitle": "Validation Functions Password Validation should return false for a password with SQL injection patterns",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('Passw0rd;--')).to.be.false;",
                  "err": {},
                  "uuid": "b664cf70-a441-44bd-8b75-d19647b97471",
                  "parentUUID": "251fbc97-a65b-4f65-b9c2-33a252d89ba2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "23fa541c-ce11-4aa7-b39d-e71e3fc13a58",
                "7fa53a2f-a113-4a8b-8ede-3fe6f7680039",
                "70aa3fa4-81e0-4fb1-bf77-ccd4ca2bc766",
                "e83c25df-3248-4bea-a144-4f43d492483f",
                "7faae125-7f06-47fe-90ab-d81743c9c6ed",
                "b664cf70-a441-44bd-8b75-d19647b97471"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d811fbfb-2097-4f43-9916-01b4b6e898b3",
              "title": "Phone Validation",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
              "file": "\\test\\functional\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid 10-digit phone number",
                  "fullTitle": "Validation Functions Phone Validation should return true for a valid 10-digit phone number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('1234567890')).to.be.true;",
                  "err": {},
                  "uuid": "5c9e564f-f9ee-4a03-80d3-970a79d68df1",
                  "parentUUID": "d811fbfb-2097-4f43-9916-01b4b6e898b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number with letters",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number with letters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('123ABC7890')).to.be.false;",
                  "err": {},
                  "uuid": "393104c9-7d48-49d3-be00-614de5348e3c",
                  "parentUUID": "d811fbfb-2097-4f43-9916-01b4b6e898b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number with special characters",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number with special characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('123-456-7890')).to.be.false;",
                  "err": {},
                  "uuid": "0243f105-36b2-4a0f-9583-b34c742b1876",
                  "parentUUID": "d811fbfb-2097-4f43-9916-01b4b6e898b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number shorter than 10 digits",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number shorter than 10 digits",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('12345')).to.be.false;",
                  "err": {},
                  "uuid": "35b94383-fa6d-4967-bf03-af10a17f0720",
                  "parentUUID": "d811fbfb-2097-4f43-9916-01b4b6e898b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number longer than 10 digits",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number longer than 10 digits",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('123456789012')).to.be.false;",
                  "err": {},
                  "uuid": "99cdd5ec-7760-490b-97ec-709b7237a840",
                  "parentUUID": "d811fbfb-2097-4f43-9916-01b4b6e898b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5c9e564f-f9ee-4a03-80d3-970a79d68df1",
                "393104c9-7d48-49d3-be00-614de5348e3c",
                "0243f105-36b2-4a0f-9583-b34c742b1876",
                "35b94383-fa6d-4967-bf03-af10a17f0720",
                "99cdd5ec-7760-490b-97ec-709b7237a840"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e7e89b26-6a4c-46eb-b6ee-b24163ecc5af",
              "title": "Price Validation",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
              "file": "\\test\\functional\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid price",
                  "fullTitle": "Validation Functions Price Validation should return true for a valid price",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice(99.99)).to.be.true;",
                  "err": {},
                  "uuid": "ada122b5-25ff-4a38-a2bc-092dee4349e6",
                  "parentUUID": "e7e89b26-6a4c-46eb-b6ee-b24163ecc5af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a negative price",
                  "fullTitle": "Validation Functions Price Validation should return false for a negative price",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice(-9.99)).to.be.false;",
                  "err": {},
                  "uuid": "56a47ad5-5ff4-4ac1-876a-5542233fe785",
                  "parentUUID": "e7e89b26-6a4c-46eb-b6ee-b24163ecc5af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a price of 0",
                  "fullTitle": "Validation Functions Price Validation should return true for a price of 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice(0)).to.be.true;",
                  "err": {},
                  "uuid": "b54bbbef-70da-4c25-88fd-7b605e0c9174",
                  "parentUUID": "e7e89b26-6a4c-46eb-b6ee-b24163ecc5af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-numeric input",
                  "fullTitle": "Validation Functions Price Validation should return false for non-numeric input",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice('fifty')).to.be.false;",
                  "err": {},
                  "uuid": "fad3094d-c542-483f-a3fc-201b4c205ab4",
                  "parentUUID": "e7e89b26-6a4c-46eb-b6ee-b24163ecc5af",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ada122b5-25ff-4a38-a2bc-092dee4349e6",
                "56a47ad5-5ff4-4ac1-876a-5542233fe785",
                "b54bbbef-70da-4c25-88fd-7b605e0c9174",
                "fad3094d-c542-483f-a3fc-201b4c205ab4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5cfbbcd9-21eb-493f-9b0c-3e9f05f944c5",
              "title": "Rating Validation",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
              "file": "\\test\\functional\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid rating of 1",
                  "fullTitle": "Validation Functions Rating Validation should return true for a valid rating of 1",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(1)).to.be.true;",
                  "err": {},
                  "uuid": "d2ce09f8-315b-4978-93e5-ee4345507f7c",
                  "parentUUID": "5cfbbcd9-21eb-493f-9b0c-3e9f05f944c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a valid rating of 5",
                  "fullTitle": "Validation Functions Rating Validation should return true for a valid rating of 5",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(5)).to.be.true;",
                  "err": {},
                  "uuid": "1ba9e155-da91-45fc-b8a0-cf71f5aeacab",
                  "parentUUID": "5cfbbcd9-21eb-493f-9b0c-3e9f05f944c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a rating less than 1",
                  "fullTitle": "Validation Functions Rating Validation should return false for a rating less than 1",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(0)).to.be.false;",
                  "err": {},
                  "uuid": "886d55c8-4e69-4f65-b94d-89de8e65a0fa",
                  "parentUUID": "5cfbbcd9-21eb-493f-9b0c-3e9f05f944c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a rating greater than 5",
                  "fullTitle": "Validation Functions Rating Validation should return false for a rating greater than 5",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(6)).to.be.false;",
                  "err": {},
                  "uuid": "fe0f53bf-c5b4-4932-8b09-4b23aef9a460",
                  "parentUUID": "5cfbbcd9-21eb-493f-9b0c-3e9f05f944c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a decimal rating",
                  "fullTitle": "Validation Functions Rating Validation should return false for a decimal rating",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(4.5)).to.be.false;",
                  "err": {},
                  "uuid": "057b37ab-8d60-476b-93e2-85eab7551d79",
                  "parentUUID": "5cfbbcd9-21eb-493f-9b0c-3e9f05f944c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-numeric rating",
                  "fullTitle": "Validation Functions Rating Validation should return false for non-numeric rating",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating('excellent')).to.be.false;",
                  "err": {},
                  "uuid": "19b443f8-ec49-49ba-8b5c-ddb68f7d87c1",
                  "parentUUID": "5cfbbcd9-21eb-493f-9b0c-3e9f05f944c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d2ce09f8-315b-4978-93e5-ee4345507f7c",
                "1ba9e155-da91-45fc-b8a0-cf71f5aeacab",
                "886d55c8-4e69-4f65-b94d-89de8e65a0fa",
                "fe0f53bf-c5b4-4932-8b09-4b23aef9a460",
                "057b37ab-8d60-476b-93e2-85eab7551d79",
                "19b443f8-ec49-49ba-8b5c-ddb68f7d87c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e7f5ca80-5278-46c7-8964-de5bb5ff74e2",
              "title": "Date Validation",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
              "file": "\\test\\functional\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid date",
                  "fullTitle": "Validation Functions Date Validation should return true for a valid date",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('2024-11-31')).to.be.true;",
                  "err": {},
                  "uuid": "e50f2bc0-7b08-40da-a983-ee0beebdedb4",
                  "parentUUID": "e7f5ca80-5278-46c7-8964-de5bb5ff74e2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an invalid date format",
                  "fullTitle": "Validation Functions Date Validation should return false for an invalid date format",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('31/12/2024')).to.be.false;",
                  "err": {},
                  "uuid": "fa86d666-37ac-46d4-83aa-0253973f6bd3",
                  "parentUUID": "e7f5ca80-5278-46c7-8964-de5bb5ff74e2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-date strings",
                  "fullTitle": "Validation Functions Date Validation should return false for non-date strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('not-a-date')).to.be.false;",
                  "err": {},
                  "uuid": "b0250c57-de67-454f-84c2-a054e367e01e",
                  "parentUUID": "e7f5ca80-5278-46c7-8964-de5bb5ff74e2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e50f2bc0-7b08-40da-a983-ee0beebdedb4",
                "fa86d666-37ac-46d4-83aa-0253973f6bd3",
                "b0250c57-de67-454f-84c2-a054e367e01e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "68724c97-3f0e-401e-812f-908d0e164ed3",
              "title": "Integer Validation",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\functional\\validations.test.js",
              "file": "\\test\\functional\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid positive integer",
                  "fullTitle": "Validation Functions Integer Validation should return true for a valid positive integer",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(42)).to.be.true;",
                  "err": {},
                  "uuid": "2ef93510-a185-4fab-919d-afab41c02055",
                  "parentUUID": "68724c97-3f0e-401e-812f-908d0e164ed3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for zero",
                  "fullTitle": "Validation Functions Integer Validation should return true for zero",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(0)).to.be.true;",
                  "err": {},
                  "uuid": "ceeee6d7-cd93-4203-a777-5c8436b89405",
                  "parentUUID": "68724c97-3f0e-401e-812f-908d0e164ed3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a negative integer",
                  "fullTitle": "Validation Functions Integer Validation should return false for a negative integer",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(-5)).to.be.false;",
                  "err": {},
                  "uuid": "b0a8d080-372c-4ea7-ba91-e4f1cce65378",
                  "parentUUID": "68724c97-3f0e-401e-812f-908d0e164ed3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a decimal number",
                  "fullTitle": "Validation Functions Integer Validation should return false for a decimal number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(42.5)).to.be.false;",
                  "err": {},
                  "uuid": "b544e289-1349-420a-81f8-9ddac73e80a0",
                  "parentUUID": "68724c97-3f0e-401e-812f-908d0e164ed3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-numeric input",
                  "fullTitle": "Validation Functions Integer Validation should return false for non-numeric input",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger('forty-two')).to.be.false;",
                  "err": {},
                  "uuid": "2380d544-cebb-43a7-94cc-4bfe19d5e7cf",
                  "parentUUID": "68724c97-3f0e-401e-812f-908d0e164ed3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2ef93510-a185-4fab-919d-afab41c02055",
                "ceeee6d7-cd93-4203-a777-5c8436b89405",
                "b0a8d080-372c-4ea7-ba91-e4f1cce65378",
                "b544e289-1349-420a-81f8-9ddac73e80a0",
                "2380d544-cebb-43a7-94cc-4bfe19d5e7cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64cdd4fd-4dbf-45ab-bd24-f7a6efa7029c",
          "title": "Integration Tests for API /api/orders",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\integration\\pedidos.test.js",
          "file": "\\test\\integration\\pedidos.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Integration Tests for API /api/orders\"",
              "fullTitle": "Integration Tests for API /api/orders \"after all\" hook in \"Integration Tests for API /api/orders\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close(); // Close the server after tests",
              "err": {},
              "uuid": "c1b9a2f2-770a-4362-996c-a65e8622bec1",
              "parentUUID": "64cdd4fd-4dbf-45ab-bd24-f7a6efa7029c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "59df7d7b-6420-4ca7-a8ae-ced90cf5ccb6",
              "title": "GET /api/orders",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\integration\\pedidos.test.js",
              "file": "\\test\\integration\\pedidos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Returns a 200 status and an array of orders with correct properties",
                  "fullTitle": "Integration Tests for API /api/orders GET /api/orders Returns a 200 status and an array of orders with correct properties",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Simulate the API response by mocking the orders\nconst res = { status: 200, body: { data: mockOrders } };\n  \nexpect(res.status).to.equal(200);\nexpect(res.body.data).to.be.an('array'); // Ensure 'data' is an array\n  \n// Check if there are orders in the array\nif (res.body.data.length > 0) {\n  // Validate properties for the first order\n  const firstOrder = res.body.data[0];\n  expect(firstOrder).to.have.property('id');\n  expect(firstOrder).to.have.property('table_number');\n  expect(firstOrder).to.have.property('restaurant_id');\n  expect(firstOrder).to.have.property('total_amount');\n  expect(firstOrder).to.have.property('client_id');\n  expect(firstOrder).to.have.property('pre_tax_total');\n  expect(firstOrder).to.have.property('post_tax_total');\n  expect(firstOrder).to.have.property('payment_method_id');\n  expect(firstOrder).to.have.property('status_id');\n  expect(firstOrder).to.have.property('order_type');\n  expect(firstOrder).to.have.property('created_at');\n} else {\n  // Optionally add an assertion to confirm no orders exist in the array if this is expected behavior\n  console.log('No orders found');\n}",
                  "err": {},
                  "uuid": "dbbaf512-bf61-4c2e-a85f-c333bad8463f",
                  "parentUUID": "59df7d7b-6420-4ca7-a8ae-ced90cf5ccb6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Returns a 404 status when no orders are found",
                  "fullTitle": "Integration Tests for API /api/orders GET /api/orders Returns a 404 status when no orders are found",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/orders/9999'); // Nonexistent ID\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "bd586986-524c-4344-bc10-93711721bb3e",
                  "parentUUID": "59df7d7b-6420-4ca7-a8ae-ced90cf5ccb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dbbaf512-bf61-4c2e-a85f-c333bad8463f",
                "bd586986-524c-4344-bc10-93711721bb3e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ad9aeab4-0dfe-43ef-9d0c-5e4c5edb72d3",
              "title": "GET /api/orders/:id",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\integration\\pedidos.test.js",
              "file": "\\test\\integration\\pedidos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Returns a 200 status and a single order for a valid ID",
                  "fullTitle": "Integration Tests for API /api/orders GET /api/orders/:id Returns a 200 status and a single order for a valid ID",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Simulate the API response by mocking a valid order\nconst res = { status: 200, body: mockOrder };\n  \nexpect(res.status).to.equal(200);\nexpect(res.body).to.be.an('object');\nexpect(res.body).to.have.property('id');\nexpect(res.body).to.have.property('table_number');\nexpect(res.body).to.have.property('restaurant_id');",
                  "err": {},
                  "uuid": "3c6a6faf-09c7-4064-b1ab-0d4f8d179b63",
                  "parentUUID": "ad9aeab4-0dfe-43ef-9d0c-5e4c5edb72d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Returns a 404 status for an invalid ID",
                  "fullTitle": "Integration Tests for API /api/orders GET /api/orders/:id Returns a 404 status for an invalid ID",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Simulate a 404 response when the order is not found\nconst res = { status: 404, body: {} };\n  \nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "03da4847-4d84-4818-9073-3b2b49af46ce",
                  "parentUUID": "ad9aeab4-0dfe-43ef-9d0c-5e4c5edb72d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c6a6faf-09c7-4064-b1ab-0d4f8d179b63",
                "03da4847-4d84-4818-9073-3b2b49af46ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e0f9e80c-2740-4234-a113-ffc59d8fc1ab",
          "title": "Integration Tests for API /api/promociones",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\integration\\promotion.test.js",
          "file": "\\test\\integration\\promotion.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Integration Tests for API /api/promociones\"",
              "fullTitle": "Integration Tests for API /api/promociones \"after all\" hook in \"Integration Tests for API /api/promociones\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close(); // Close the server after tests",
              "err": {},
              "uuid": "94ce3312-ab72-4047-a201-1ceb319a9abc",
              "parentUUID": "e0f9e80c-2740-4234-a113-ffc59d8fc1ab",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6c388599-be3e-4dd7-b66e-b56b8c325a7e",
              "title": "Integration Tests for API /api/promociones",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\integration\\promotion.test.js",
              "file": "\\test\\integration\\promotion.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "cdc3c95d-9f28-4f3d-93a3-ca1c199ddfe2",
                  "title": "GET /api/promociones",
                  "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\integration\\promotion.test.js",
                  "file": "\\test\\integration\\promotion.test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Returns a 200 status and an array of promotions",
                      "fullTitle": "Integration Tests for API /api/promociones Integration Tests for API /api/promociones GET /api/promociones Returns a 200 status and an array of promotions",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await request(app).get('/api/promociones');\nexpect(res.status).to.equal(200);\nexpect(res.body.data).to.be.an('array'); // Check that data is an array\nif (res.body.data.length > 0) {\n  expect(res.body.data[0]).to.have.property('id'); // Check the 'id' property\n  expect(res.body.data[0]).to.have.property('code'); // Check the 'code' property\n  expect(res.body.data[0]).to.have.property('description'); // Check the 'description' property\n  // Add other fields to check as needed\n}",
                      "err": {},
                      "uuid": "ca12cfd9-662a-45da-90c3-3d00c57c3e5e",
                      "parentUUID": "cdc3c95d-9f28-4f3d-93a3-ca1c199ddfe2",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Returns a 404 status when promotions are not found",
                      "fullTitle": "Integration Tests for API /api/promociones Integration Tests for API /api/promociones GET /api/promociones Returns a 404 status when promotions are not found",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const res = await request(app).get('/api/promociones/9999'); // Nonexistent ID\nexpect(res.status).to.equal(404);",
                      "err": {},
                      "uuid": "2f2e29fb-555b-464a-a3c7-9e8acffe7809",
                      "parentUUID": "cdc3c95d-9f28-4f3d-93a3-ca1c199ddfe2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ca12cfd9-662a-45da-90c3-3d00c57c3e5e",
                    "2f2e29fb-555b-464a-a3c7-9e8acffe7809"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 10,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "004a81da-35a9-4217-8c0d-1e847aaf242f",
              "title": "GET /api/promociones/:id",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\integration\\promotion.test.js",
              "file": "\\test\\integration\\promotion.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Returns a 200 status and a single promotion for a valid ID",
                  "fullTitle": "Integration Tests for API /api/promociones GET /api/promociones/:id Returns a 200 status and a single promotion for a valid ID",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Replace '1' with a valid ID from your database\nconst res = await request(app).get('/api/promociones/1');\nexpect(res.status).to.equal(200);\nexpect(res.body).to.be.an('object');\nexpect(res.body.data).to.have.property('id', '1'); // Check if 'id' is a string '1'",
                  "err": {},
                  "uuid": "2ae8fbba-dd4b-4465-aa0e-253c7467ba17",
                  "parentUUID": "004a81da-35a9-4217-8c0d-1e847aaf242f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Returns a 404 status for an invalid ID",
                  "fullTitle": "Integration Tests for API /api/promociones GET /api/promociones/:id Returns a 404 status for an invalid ID",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/promociones/9999'); // Nonexistent ID\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "d227dc51-357e-4935-896d-6470b190b65f",
                  "parentUUID": "004a81da-35a9-4217-8c0d-1e847aaf242f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2ae8fbba-dd4b-4465-aa0e-253c7467ba17",
                "d227dc51-357e-4935-896d-6470b190b65f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d1e888e1-a97b-48d5-9898-7d114d470045",
          "title": "Pruebas de la API Pedidos",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\pedidos.test.js",
          "file": "\\test\\unit\\pedidos.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API Pedidos\"",
              "fullTitle": "Pruebas de la API Pedidos \"before all\" hook in \"Pruebas de la API Pedidos\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await pedidosModelo.findAll();  // Obtiene todos los pedidos\ngetId = await pedidosModelo.findById(1); // Obtiene el pedido con ID 1\nfirstOrder = getAll[0]; // Extraer el primer pedido para usar en los tests",
              "err": {},
              "uuid": "1e9ebd11-8563-42bb-ae0c-8f66606c4757",
              "parentUUID": "d1e888e1-a97b-48d5-9898-7d114d470045",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API Pedidos\"",
              "fullTitle": "Pruebas de la API Pedidos \"after all\" hook in \"Pruebas de la API Pedidos\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "712884f9-05a2-4f5a-9fcc-e0d2e8e54cab",
              "parentUUID": "d1e888e1-a97b-48d5-9898-7d114d470045",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "4e88a148-496f-4a7b-9357-936fe30a94bc",
              "title": "Pruebas del método GET",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\pedidos.test.js",
              "file": "\\test\\unit\\pedidos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "f9bef7b9-2002-42c0-bc88-c8dab1b4c973",
                  "parentUUID": "4e88a148-496f-4a7b-9357-936fe30a94bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(getAll[0]).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///E:/Documentos/GitHub/El-Fortin-2.0/ElFortin_APIs/test/unit/pedidos.test.js:28:37)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "2e33f01f-358a-4529-9c90-5ecf29d239ab",
                  "parentUUID": "4e88a148-496f-4a7b-9357-936fe30a94bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran pedidos",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET Devuelve el código de estado 404 si no se encuentran pedidos",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/orders/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "af2abbf3-e2f5-4685-a94b-b000a5f1302f",
                  "parentUUID": "4e88a148-496f-4a7b-9357-936fe30a94bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada pedido devuelto tiene los campos correctos",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET Cada pedido devuelto tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(firstOrder).to.have.property('id');\nexpect(firstOrder).to.have.property('restaurant_id');\nexpect(firstOrder).to.have.property('table_number');\nexpect(firstOrder).to.have.property('total_amount');\nexpect(firstOrder).to.have.property('client_id');\nexpect(firstOrder).to.have.property('pre_tax_total');\nexpect(firstOrder).to.have.property('post_tax_total');\nexpect(firstOrder).to.have.property('payment_method_id');\nexpect(firstOrder).to.have.property('status_id');\nexpect(firstOrder).to.have.property('order_type');\nexpect(firstOrder).to.have.property('discount_id');\nexpect(firstOrder).to.have.property('created_at');\nexpect(firstOrder).to.have.property('updated_at');\nexpect(firstOrder).to.have.property('deleted_at');",
                  "err": {
                    "message": "AssertionError: Target cannot be null or undefined.",
                    "estack": "AssertionError: Target cannot be null or undefined.\n    at Context.<anonymous> (file:///E:/Documentos/GitHub/El-Fortin-2.0/ElFortin_APIs/test/unit/pedidos.test.js:39:40)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "f6f19680-679e-4fcc-bc24-56dd8fffd943",
                  "parentUUID": "4e88a148-496f-4a7b-9357-936fe30a94bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f9bef7b9-2002-42c0-bc88-c8dab1b4c973",
                "af2abbf3-e2f5-4685-a94b-b000a5f1302f"
              ],
              "failures": [
                "2e33f01f-358a-4529-9c90-5ecf29d239ab",
                "f6f19680-679e-4fcc-bc24-56dd8fffd943"
              ],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5d348c1e-71c4-422b-930b-eb518f163d8e",
              "title": "Pruebas del método GET pedido por id",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\pedidos.test.js",
              "file": "\\test\\unit\\pedidos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET pedido por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///E:/Documentos/GitHub/El-Fortin-2.0/ElFortin_APIs/test/unit/pedidos.test.js:58:33)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "a58aa7a3-9865-4111-ac72-886111f604e0",
                  "parentUUID": "5d348c1e-71c4-422b-930b-eb518f163d8e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET pedido por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.not.be.an('array');",
                  "err": {},
                  "uuid": "d266a219-4990-4174-9ecc-de5dfc56abd4",
                  "parentUUID": "5d348c1e-71c4-422b-930b-eb518f163d8e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve un código de estado 404 si el ID no existe",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET pedido por id Devuelve un código de estado 404 si el ID no existe",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/orders/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "fa7489aa-7734-4027-a921-7b7e30b90dfd",
                  "parentUUID": "5d348c1e-71c4-422b-930b-eb518f163d8e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d266a219-4990-4174-9ecc-de5dfc56abd4",
                "fa7489aa-7734-4027-a921-7b7e30b90dfd"
              ],
              "failures": [
                "a58aa7a3-9865-4111-ac72-886111f604e0"
              ],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e86146c-50b5-449a-9f1b-719fa2592ba4",
          "title": "Pruebas de la API productos",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\productos.test.js",
          "file": "\\test\\unit\\productos.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API productos\"",
              "fullTitle": "Pruebas de la API productos \"before all\" hook in \"Pruebas de la API productos\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await productModel.findAll();\n        getId = await productModel.findById(1);",
              "err": {},
              "uuid": "520c320d-533e-4ee5-a5ac-392d7d73a112",
              "parentUUID": "2e86146c-50b5-449a-9f1b-719fa2592ba4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API productos\"",
              "fullTitle": "Pruebas de la API productos \"after all\" hook in \"Pruebas de la API productos\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "4cdaaf60-4ddd-4824-9e1a-d668c21227bc",
              "parentUUID": "2e86146c-50b5-449a-9f1b-719fa2592ba4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "e261dd79-d5db-4006-b35f-07dc35e8a7c6",
              "title": "Pruebas del metodo GET",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\productos.test.js",
              "file": "\\test\\unit\\productos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "9152507d-7fdc-449e-85b4-68f6c5ac7b6f",
                  "parentUUID": "e261dd79-d5db-4006-b35f-07dc35e8a7c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "ca6cdde0-0f57-48dd-820f-63d564e21414",
                  "parentUUID": "e261dd79-d5db-4006-b35f-07dc35e8a7c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /products",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Devuelve el código de estado 200 para GET /products",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/products');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "3464c89f-e622-4491-b86f-6fd3892619d5",
                  "parentUUID": "e261dd79-d5db-4006-b35f-07dc35e8a7c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran productos",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran productos",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/products/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "ff8c0397-160e-4e86-b93e-a73d2b8f2017",
                  "parentUUID": "e261dd79-d5db-4006-b35f-07dc35e8a7c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada producto devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Cada producto devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('name');\nexpect( getAll[0]).to.have.property('description');\nexpect( getAll[0]).to.have.property('price');\nexpect( getAll[0]).to.have.property('image_url');\nexpect( getAll[0]).to.have.property('category_name');\nexpect( getAll[0]).to.have.property('pre_tax_cost');\nexpect( getAll[0]).to.have.property('post_tax_cost');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "42536dc0-3320-411a-b8f5-bd64b78558f0",
                  "parentUUID": "e261dd79-d5db-4006-b35f-07dc35e8a7c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9152507d-7fdc-449e-85b4-68f6c5ac7b6f",
                "ca6cdde0-0f57-48dd-820f-63d564e21414",
                "3464c89f-e622-4491-b86f-6fd3892619d5",
                "ff8c0397-160e-4e86-b93e-a73d2b8f2017",
                "42536dc0-3320-411a-b8f5-bd64b78558f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f65526e9-7a66-49a3-a8bc-9de07d967eb7",
              "title": "Pruebas del metodo GET producto por id",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\productos.test.js",
              "file": "\\test\\unit\\productos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET producto por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "2eee15a1-02b3-40bf-b73f-cce4aa736cb1",
                  "parentUUID": "f65526e9-7a66-49a3-a8bc-9de07d967eb7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET producto por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "8b198c49-9fb8-4d9d-ad03-c88de7efad88",
                  "parentUUID": "f65526e9-7a66-49a3-a8bc-9de07d967eb7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2eee15a1-02b3-40bf-b73f-cce4aa736cb1",
                "8b198c49-9fb8-4d9d-ad03-c88de7efad88"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bfd5c4c0-b08e-4d60-b615-8aa286537736",
          "title": "Pruebas de la API promociones",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\promociones.test.js",
          "file": "\\test\\unit\\promociones.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API promociones\"",
              "fullTitle": "Pruebas de la API promociones \"before all\" hook in \"Pruebas de la API promociones\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await promocionesModelo.obtenerTodo();\n        getId = await promocionesModelo.obtenerPromocionId(1);",
              "err": {},
              "uuid": "77462e69-e17d-4f2e-a317-7619323a12aa",
              "parentUUID": "bfd5c4c0-b08e-4d60-b615-8aa286537736",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API promociones\"",
              "fullTitle": "Pruebas de la API promociones \"after all\" hook in \"Pruebas de la API promociones\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "9a01f330-5e95-42f5-9d32-113d01f85b09",
              "parentUUID": "bfd5c4c0-b08e-4d60-b615-8aa286537736",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "fd5ea788-3997-42ca-bb6e-73238a8dd3f1",
              "title": "Pruebas del metodo GET",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\promociones.test.js",
              "file": "\\test\\unit\\promociones.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "2939350c-5209-42da-9cc4-7f26accc7528",
                  "parentUUID": "fd5ea788-3997-42ca-bb6e-73238a8dd3f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "97a8ddf2-5a08-4a44-8ec0-a851ea20a831",
                  "parentUUID": "fd5ea788-3997-42ca-bb6e-73238a8dd3f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /promociones",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Devuelve el código de estado 200 para GET /promociones",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/promociones');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "1bfcf212-d6c9-426d-add9-86869631eb5f",
                  "parentUUID": "fd5ea788-3997-42ca-bb6e-73238a8dd3f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran promociones",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran promociones",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/promociones/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "b25924ce-d2ac-465f-b59a-cbb5372f4886",
                  "parentUUID": "fd5ea788-3997-42ca-bb6e-73238a8dd3f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada promoción devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Cada promoción devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('code');\nexpect( getAll[0]).to.have.property('description');\nexpect( getAll[0]).to.have.property('discount_type');\nexpect( getAll[0]).to.have.property('value');\nexpect( getAll[0]).to.have.property('start_date');\nexpect( getAll[0]).to.have.property('end_date');\nexpect( getAll[0]).to.have.property('active');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "1fe75c2a-8148-4239-bb9b-3b0a9e60a30c",
                  "parentUUID": "fd5ea788-3997-42ca-bb6e-73238a8dd3f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2939350c-5209-42da-9cc4-7f26accc7528",
                "97a8ddf2-5a08-4a44-8ec0-a851ea20a831",
                "1bfcf212-d6c9-426d-add9-86869631eb5f",
                "b25924ce-d2ac-465f-b59a-cbb5372f4886",
                "1fe75c2a-8148-4239-bb9b-3b0a9e60a30c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "29577266-3a85-4b2a-ba0b-29853c803dbc",
              "title": "Pruebas del metodo GET promocion por id",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\promociones.test.js",
              "file": "\\test\\unit\\promociones.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET promocion por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "d4724945-0cdc-4643-9cd1-cccfc10094c2",
                  "parentUUID": "29577266-3a85-4b2a-ba0b-29853c803dbc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET promocion por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "171629d2-d4c0-431c-bca9-c55fd8600b7b",
                  "parentUUID": "29577266-3a85-4b2a-ba0b-29853c803dbc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d4724945-0cdc-4643-9cd1-cccfc10094c2",
                "171629d2-d4c0-431c-bca9-c55fd8600b7b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "39f3896f-cc47-41eb-98fd-c1b11ac3566a",
          "title": "Pruebas de la API proveedores",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\proveedores.test.js",
          "file": "\\test\\unit\\proveedores.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API proveedores\"",
              "fullTitle": "Pruebas de la API proveedores \"before all\" hook in \"Pruebas de la API proveedores\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await proveedoresModelo.obtenerTodo();\n        getId = await proveedoresModelo.obtenerProveedorId(1);",
              "err": {},
              "uuid": "15d0c803-1cad-4680-8651-b294a804ff49",
              "parentUUID": "39f3896f-cc47-41eb-98fd-c1b11ac3566a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API proveedores\"",
              "fullTitle": "Pruebas de la API proveedores \"after all\" hook in \"Pruebas de la API proveedores\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "7a2d481f-7cad-4d85-88a4-8959decb7bc3",
              "parentUUID": "39f3896f-cc47-41eb-98fd-c1b11ac3566a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "549c7f0d-aebb-46d6-b28d-98608b83f24c",
              "title": "Pruebas del metodo GET",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\proveedores.test.js",
              "file": "\\test\\unit\\proveedores.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "67924c44-7bfd-4bcd-b228-839337456412",
                  "parentUUID": "549c7f0d-aebb-46d6-b28d-98608b83f24c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "b2995233-1241-4d36-8cf1-312e6b7d1a58",
                  "parentUUID": "549c7f0d-aebb-46d6-b28d-98608b83f24c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /proveedores",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Devuelve el código de estado 200 para GET /proveedores",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/proveedores');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "063e0192-d81d-4fdc-a047-de87c659470b",
                  "parentUUID": "549c7f0d-aebb-46d6-b28d-98608b83f24c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran proveedores",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran proveedores",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/proveedores/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "c7a60728-e25d-4c3b-b633-e5b86555b00a",
                  "parentUUID": "549c7f0d-aebb-46d6-b28d-98608b83f24c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada proveedor devuelto tiene los campos correctos",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Cada proveedor devuelto tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('name');\nexpect( getAll[0]).to.have.property('contact_info');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "bea7ceca-1878-447b-b4b4-3fa710aee438",
                  "parentUUID": "549c7f0d-aebb-46d6-b28d-98608b83f24c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67924c44-7bfd-4bcd-b228-839337456412",
                "b2995233-1241-4d36-8cf1-312e6b7d1a58",
                "063e0192-d81d-4fdc-a047-de87c659470b",
                "c7a60728-e25d-4c3b-b633-e5b86555b00a",
                "bea7ceca-1878-447b-b4b4-3fa710aee438"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6302ac88-a5b6-4c05-8b61-760c53632ba7",
              "title": "Pruebas del metodo GET proveedor por id",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\proveedores.test.js",
              "file": "\\test\\unit\\proveedores.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET proveedor por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "58e3f9c4-b9a2-487b-80ee-a4a36ccbf7a6",
                  "parentUUID": "6302ac88-a5b6-4c05-8b61-760c53632ba7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET proveedor por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "2babbfe4-e2cb-48aa-b0f8-7508b5e22f00",
                  "parentUUID": "6302ac88-a5b6-4c05-8b61-760c53632ba7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "58e3f9c4-b9a2-487b-80ee-a4a36ccbf7a6",
                "2babbfe4-e2cb-48aa-b0f8-7508b5e22f00"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2005c5ec-5b6b-4f8d-a3ef-5200463565bd",
          "title": "Pruebas de la API restaurantes",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\restaurantes.test.js",
          "file": "\\test\\unit\\restaurantes.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API restaurantes\"",
              "fullTitle": "Pruebas de la API restaurantes \"before all\" hook in \"Pruebas de la API restaurantes\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await restaurantesModelo.obtenerTodo();\n        getId = await restaurantesModelo.obtenerRestauranteId(1);",
              "err": {},
              "uuid": "9ca35444-618f-47c2-9aa5-314847b762b3",
              "parentUUID": "2005c5ec-5b6b-4f8d-a3ef-5200463565bd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API restaurantes\"",
              "fullTitle": "Pruebas de la API restaurantes \"after all\" hook in \"Pruebas de la API restaurantes\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "0a79687d-4c97-4360-835b-3ad58ec504ee",
              "parentUUID": "2005c5ec-5b6b-4f8d-a3ef-5200463565bd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "672e485c-c6fe-4d28-81d1-02fd0cdeb834",
              "title": "Pruebas del metodo GET",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\restaurantes.test.js",
              "file": "\\test\\unit\\restaurantes.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "3e057e83-d579-496f-9ba1-5792cd9fb60e",
                  "parentUUID": "672e485c-c6fe-4d28-81d1-02fd0cdeb834",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "bd2d6dc7-762a-4b28-a360-305fa877f1c2",
                  "parentUUID": "672e485c-c6fe-4d28-81d1-02fd0cdeb834",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /restaurantes",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Devuelve el código de estado 200 para GET /restaurantes",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/restaurantes');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "6c70062b-c1eb-47b1-9d30-7c73feec2bc3",
                  "parentUUID": "672e485c-c6fe-4d28-81d1-02fd0cdeb834",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran restaurantes",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran restaurantes",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/restaurantes/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "7f1733bc-9695-4f4f-bb4d-b5340d36c952",
                  "parentUUID": "672e485c-c6fe-4d28-81d1-02fd0cdeb834",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada restaurante devuelto tiene los campos correctos",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Cada restaurante devuelto tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('name');\nexpect( getAll[0]).to.have.property('location');\nexpect( getAll[0]).to.have.property('opening_hours');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "30dc6cfd-f25f-41af-8f90-75d6ea008921",
                  "parentUUID": "672e485c-c6fe-4d28-81d1-02fd0cdeb834",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e057e83-d579-496f-9ba1-5792cd9fb60e",
                "bd2d6dc7-762a-4b28-a360-305fa877f1c2",
                "6c70062b-c1eb-47b1-9d30-7c73feec2bc3",
                "7f1733bc-9695-4f4f-bb4d-b5340d36c952",
                "30dc6cfd-f25f-41af-8f90-75d6ea008921"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d87c395d-ef2f-4091-8665-ecb4ad36aabd",
              "title": "Pruebas del metodo GET restaurante por id",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\restaurantes.test.js",
              "file": "\\test\\unit\\restaurantes.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET restaurante por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "0e03fba4-6cce-46a7-a94a-a318dea6cfa9",
                  "parentUUID": "d87c395d-ef2f-4091-8665-ecb4ad36aabd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET restaurante por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "a7bf9117-162b-4471-9c74-7d8bbf8f8bf1",
                  "parentUUID": "d87c395d-ef2f-4091-8665-ecb4ad36aabd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e03fba4-6cce-46a7-a94a-a318dea6cfa9",
                "a7bf9117-162b-4471-9c74-7d8bbf8f8bf1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f13b5d73-a16d-419c-96ea-eb4daa086617",
          "title": "Pruebas de la API usuarios",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\usuarios.test.js",
          "file": "\\test\\unit\\usuarios.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API usuarios\"",
              "fullTitle": "Pruebas de la API usuarios \"before all\" hook in \"Pruebas de la API usuarios\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await usuariosModel.findAll();\n        getId = await usuariosModel.findById(1);",
              "err": {},
              "uuid": "38361425-84f2-4ed2-9753-608717881294",
              "parentUUID": "f13b5d73-a16d-419c-96ea-eb4daa086617",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API usuarios\"",
              "fullTitle": "Pruebas de la API usuarios \"after all\" hook in \"Pruebas de la API usuarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "670634d8-5881-440f-a483-911f4e04c7b1",
              "parentUUID": "f13b5d73-a16d-419c-96ea-eb4daa086617",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "60074970-4be8-46a1-986c-0f5f605ba560",
              "title": "Pruebas del metodo GET",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\usuarios.test.js",
              "file": "\\test\\unit\\usuarios.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "b290c737-2764-49c3-9820-71a23679d3b9",
                  "parentUUID": "60074970-4be8-46a1-986c-0f5f605ba560",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "d0c90630-011e-46e3-8636-67cf95fc195e",
                  "parentUUID": "60074970-4be8-46a1-986c-0f5f605ba560",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /usuarios",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Devuelve el código de estado 200 para GET /usuarios",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/usuarios');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "66a21aec-2c85-452e-ab3a-acc32644c3e4",
                  "parentUUID": "60074970-4be8-46a1-986c-0f5f605ba560",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran usuarios",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran usuarios",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/usuarios/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "6524bd4b-9f03-4cf4-abe1-d225bbb3002d",
                  "parentUUID": "60074970-4be8-46a1-986c-0f5f605ba560",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada usuario devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Cada usuario devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('name');\nexpect( getAll[0]).to.have.property('email');\nexpect( getAll[0]).to.have.property('phone');\nexpect( getAll[0]).to.have.property('image_url');\nexpect( getAll[0]).to.have.property('nickname');\nexpect( getAll[0]).to.have.property('encrypted_password');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "82f8f4b9-d817-4c5b-b0ec-a1b87b34d166",
                  "parentUUID": "60074970-4be8-46a1-986c-0f5f605ba560",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b290c737-2764-49c3-9820-71a23679d3b9",
                "d0c90630-011e-46e3-8636-67cf95fc195e",
                "66a21aec-2c85-452e-ab3a-acc32644c3e4",
                "6524bd4b-9f03-4cf4-abe1-d225bbb3002d",
                "82f8f4b9-d817-4c5b-b0ec-a1b87b34d166"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "29b23aa0-c0c3-4877-a3cf-4bfc923e8961",
              "title": "Pruebas del metodo GET usuario por id",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\usuarios.test.js",
              "file": "\\test\\unit\\usuarios.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET usuario por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "04634448-6f85-45ad-911b-34f53f7737b5",
                  "parentUUID": "29b23aa0-c0c3-4877-a3cf-4bfc923e8961",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET usuario por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "62088862-a7fd-4d8d-895b-cd716d9451a9",
                  "parentUUID": "29b23aa0-c0c3-4877-a3cf-4bfc923e8961",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04634448-6f85-45ad-911b-34f53f7737b5",
                "62088862-a7fd-4d8d-895b-cd716d9451a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3013f3f-85df-462c-919d-fdc695eb2f38",
          "title": "Pruebas de la API ventas",
          "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\ventas.test.js",
          "file": "\\test\\unit\\ventas.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"before all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await ventasModel.obtenerTodo();\n        getId = await ventasModel.obtenerVentaId(1);",
              "err": {},
              "uuid": "dfbf8028-c1cf-442f-a6b3-8eda7f66a569",
              "parentUUID": "d3013f3f-85df-462c-919d-fdc695eb2f38",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"after all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "d43741ee-f72a-4a29-8f18-42b791a8c959",
              "parentUUID": "d3013f3f-85df-462c-919d-fdc695eb2f38",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "831ed530-df90-4843-a864-20c7de23a595",
              "title": "Pruebas del metodo GET",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\ventas.test.js",
              "file": "\\test\\unit\\ventas.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "b19748f9-a1d7-4649-b541-89dde3174ee2",
                  "parentUUID": "831ed530-df90-4843-a864-20c7de23a595",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "566d8c5d-39fb-4dae-993b-ca573871a340",
                  "parentUUID": "831ed530-df90-4843-a864-20c7de23a595",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el código de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "f7565e2d-f557-4694-a22b-76c6d1075c3d",
                  "parentUUID": "831ed530-df90-4843-a864-20c7de23a595",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "79a8df73-7fd7-4c37-92ba-ce115b544c4b",
                  "parentUUID": "831ed530-df90-4843-a864-20c7de23a595",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "fda295ec-0719-4704-ab35-0c5b1f64b56d",
                  "parentUUID": "831ed530-df90-4843-a864-20c7de23a595",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b19748f9-a1d7-4649-b541-89dde3174ee2",
                "566d8c5d-39fb-4dae-993b-ca573871a340",
                "f7565e2d-f557-4694-a22b-76c6d1075c3d",
                "79a8df73-7fd7-4c37-92ba-ce115b544c4b",
                "fda295ec-0719-4704-ab35-0c5b1f64b56d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "704944e4-ce9e-4641-9d28-d2b916d3db93",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "E:\\Documentos\\GitHub\\El-Fortin-2.0\\ElFortin_APIs\\test\\unit\\ventas.test.js",
              "file": "\\test\\unit\\ventas.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "aab7ac5d-a4eb-41ba-8ed6-ba196c5afca1",
                  "parentUUID": "704944e4-ce9e-4641-9d28-d2b916d3db93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "d42c9584-2e6f-4543-83fc-7d1c0c7cb726",
                  "parentUUID": "704944e4-ce9e-4641-9d28-d2b916d3db93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aab7ac5d-a4eb-41ba-8ed6-ba196c5afca1",
                "d42c9584-2e6f-4543-83fc-7d1c0c7cb726"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}