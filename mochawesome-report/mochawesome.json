{
  "stats": {
    "suites": 27,
    "tests": 81,
    "passes": 61,
    "pending": 0,
    "failures": 20,
    "start": "2024-11-19T14:20:45.073Z",
    "end": "2024-11-19T14:20:46.335Z",
    "duration": 1262,
    "testsRegistered": 95,
    "passPercent": 64.21052631578948,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 14,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "11d74560-d6d5-4847-a420-1ea739ed8aa0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "43dc467f-13ad-4366-8d87-321f44c5f4a4",
          "title": "Pruebas de la API Pedidos",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\pedidos.test.js",
          "file": "\\test\\pedidos.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API Pedidos\"",
              "fullTitle": "Pruebas de la API Pedidos \"before all\" hook in \"Pruebas de la API Pedidos\"",
              "timedOut": false,
              "duration": 320,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await pedidosModelo.findAll();\ngetId = await pedidosModelo.findById(1);\nfirstOrder = getAll[0]; // Extraer el primer pedido para usar en los tests",
              "err": {},
              "uuid": "97433992-ead7-4cc1-a060-5f154f72018c",
              "parentUUID": "43dc467f-13ad-4366-8d87-321f44c5f4a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API Pedidos\"",
              "fullTitle": "Pruebas de la API Pedidos \"after all\" hook in \"Pruebas de la API Pedidos\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "687b0743-b8d6-4ad1-8a90-5f0da2fbf762",
              "parentUUID": "43dc467f-13ad-4366-8d87-321f44c5f4a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "d6b7af85-fe3e-48be-9fc9-948c8dc85c26",
              "title": "Pruebas del método GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\pedidos.test.js",
              "file": "\\test\\pedidos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET Devuelve un array",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "e17920b7-ecdc-4315-9a0f-87ad1ad62071",
                  "parentUUID": "d6b7af85-fe3e-48be-9fc9-948c8dc85c26",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 6,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(getAll[0]).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/pedidos.test.js:28:37)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "f46a2590-4718-43be-a072-6ba6a9786134",
                  "parentUUID": "d6b7af85-fe3e-48be-9fc9-948c8dc85c26",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /orders",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET Devuelve el código de estado 200 para GET /orders",
                  "timedOut": false,
                  "duration": 124,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/orders');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "2e8ee952-ab58-4ec7-98b2-bdd5b8885ae1",
                  "parentUUID": "d6b7af85-fe3e-48be-9fc9-948c8dc85c26",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran pedidos",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET Devuelve el código de estado 404 si no se encuentran pedidos",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/orders/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "1208771e-691a-42ad-97dc-8e46b4a7b739",
                  "parentUUID": "d6b7af85-fe3e-48be-9fc9-948c8dc85c26",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada pedido devuelto tiene los campos correctos",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET Cada pedido devuelto tiene los campos correctos",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(firstOrder).to.have.property('id');\nexpect(firstOrder).to.have.property('restaurant_id');\nexpect(firstOrder).to.have.property('table_number');\nexpect(firstOrder).to.have.property('total_amount');\nexpect(firstOrder).to.have.property('client_id');\nexpect(firstOrder).to.have.property('pre_tax_total');\nexpect(firstOrder).to.have.property('post_tax_total');\nexpect(firstOrder).to.have.property('payment_method_id');\nexpect(firstOrder).to.have.property('status_id');\nexpect(firstOrder).to.have.property('order_type');\nexpect(firstOrder).to.have.property('discount_id');\nexpect(firstOrder).to.have.property('created_at');\nexpect(firstOrder).to.have.property('updated_at');\nexpect(firstOrder).to.have.property('deleted_at');",
                  "err": {
                    "message": "AssertionError: Target cannot be null or undefined.",
                    "estack": "AssertionError: Target cannot be null or undefined.\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/pedidos.test.js:42:40)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "f694bdcc-9ed9-4b8e-8779-98c20ab24230",
                  "parentUUID": "d6b7af85-fe3e-48be-9fc9-948c8dc85c26",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e17920b7-ecdc-4315-9a0f-87ad1ad62071",
                "2e8ee952-ab58-4ec7-98b2-bdd5b8885ae1",
                "1208771e-691a-42ad-97dc-8e46b4a7b739"
              ],
              "failures": [
                "f46a2590-4718-43be-a072-6ba6a9786134",
                "f694bdcc-9ed9-4b8e-8779-98c20ab24230"
              ],
              "pending": [],
              "skipped": [],
              "duration": 164,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "67a2e47e-e01a-4e7f-bfac-0ac765356f5c",
              "title": "Pruebas del método GET pedido por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\pedidos.test.js",
              "file": "\\test\\pedidos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET pedido por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/pedidos.test.js:61:33)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "fdb69d86-14e5-4012-b225-de3f51b97605",
                  "parentUUID": "67a2e47e-e01a-4e7f-bfac-0ac765356f5c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API Pedidos Pruebas del método GET pedido por id No devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "47880444-47a4-4273-bb8d-5ceea6f05010",
                  "parentUUID": "67a2e47e-e01a-4e7f-bfac-0ac765356f5c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "47880444-47a4-4273-bb8d-5ceea6f05010"
              ],
              "failures": [
                "fdb69d86-14e5-4012-b225-de3f51b97605"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6f2a355e-ea26-49a0-a169-70588d507363",
          "title": "Pruebas de la API productos",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\productos.test.js",
          "file": "\\test\\productos.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API productos\"",
              "fullTitle": "Pruebas de la API productos \"before all\" hook in \"Pruebas de la API productos\"",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await productModel.findAll();\n        getId = await productModel.findById(1);",
              "err": {},
              "uuid": "9a35293b-ff75-47c4-a788-e25cbdd5b2b6",
              "parentUUID": "6f2a355e-ea26-49a0-a169-70588d507363",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API productos\"",
              "fullTitle": "Pruebas de la API productos \"after all\" hook in \"Pruebas de la API productos\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "0089d25f-3e41-4886-aa10-a8a30582fa99",
              "parentUUID": "6f2a355e-ea26-49a0-a169-70588d507363",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "31f74470-6d71-42d1-9d23-f89bf9023cb2",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\productos.test.js",
              "file": "\\test\\productos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "40a011ea-2f01-43f3-8aa7-272c3daae404",
                  "parentUUID": "31f74470-6d71-42d1-9d23-f89bf9023cb2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/productos.test.js:27:38)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "3f4e1094-3e4a-4c67-96a8-5e76a8f7882b",
                  "parentUUID": "31f74470-6d71-42d1-9d23-f89bf9023cb2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Devuelve el código de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 33,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "e9296196-c9fe-444b-abfd-cb59d496a55e",
                  "parentUUID": "31f74470-6d71-42d1-9d23-f89bf9023cb2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "7373de14-cab2-4989-a409-1f30422a0ac0",
                  "parentUUID": "31f74470-6d71-42d1-9d23-f89bf9023cb2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {
                    "message": "AssertionError: Target cannot be null or undefined.",
                    "estack": "AssertionError: Target cannot be null or undefined.\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/productos.test.js:39:40)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "67434c3c-23b1-4223-8926-4b82e1967d15",
                  "parentUUID": "31f74470-6d71-42d1-9d23-f89bf9023cb2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40a011ea-2f01-43f3-8aa7-272c3daae404",
                "e9296196-c9fe-444b-abfd-cb59d496a55e",
                "7373de14-cab2-4989-a409-1f30422a0ac0"
              ],
              "failures": [
                "3f4e1094-3e4a-4c67-96a8-5e76a8f7882b",
                "67434c3c-23b1-4223-8926-4b82e1967d15"
              ],
              "pending": [],
              "skipped": [],
              "duration": 53,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c0585574-5820-4fde-b95f-5b9291888cc4",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\productos.test.js",
              "file": "\\test\\productos.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/productos.test.js:53:33)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "3fe1e855-1e19-4e23-bdfc-696cda053560",
                  "parentUUID": "c0585574-5820-4fde-b95f-5b9291888cc4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API productos Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "73b26812-6b16-418c-a2a1-8bdba25c483f",
                  "parentUUID": "c0585574-5820-4fde-b95f-5b9291888cc4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "73b26812-6b16-418c-a2a1-8bdba25c483f"
              ],
              "failures": [
                "3fe1e855-1e19-4e23-bdfc-696cda053560"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3ad353a-3ad0-4a41-98e3-611b7a51b70b",
          "title": "Pruebas de la API promociones",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\promociones.test.js",
          "file": "\\test\\promociones.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API promociones\"",
              "fullTitle": "Pruebas de la API promociones \"before all\" hook in \"Pruebas de la API promociones\"",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "getAll = await promocionesModelo.obtenerTodo();\n        getId = await promocionesModelo.obtenerPromocionId(1);",
              "err": {
                "message": "error: column \"deleted_at\" does not exist",
                "estack": "error: column \"deleted_at\" does not exist\n    at C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async promocionModelo.obtenerTodo (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/modelos/promociones/promocionModelo.js:6:20)\n    at async Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/promociones.test.js:11:19)",
                "diff": null
              },
              "uuid": "c52d9ed6-96f5-4230-9d40-cacb3428a192",
              "parentUUID": "b3ad353a-3ad0-4a41-98e3-611b7a51b70b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API promociones\"",
              "fullTitle": "Pruebas de la API promociones \"after all\" hook in \"Pruebas de la API promociones\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "4f30d322-7e0d-4b40-b3c7-38d35a78bc7c",
              "parentUUID": "b3ad353a-3ad0-4a41-98e3-611b7a51b70b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9a31a547-10d0-4764-a117-4eebe9b9d238",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\promociones.test.js",
              "file": "\\test\\promociones.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "07560f8b-0df5-4bb0-9ed5-f9697686d8c8",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "b2c3805f-a758-4094-9a93-ccb636c3db9c",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Devuelve el código de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "7e200f4c-22c2-4c28-a27b-d5dfd4c93707",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "71b4b0fc-adec-4f29-8d61-35eb6eeefcf3",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "cacbb184-6864-4c7b-8cfb-333d9e56f4d4",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "07560f8b-0df5-4bb0-9ed5-f9697686d8c8",
                "b2c3805f-a758-4094-9a93-ccb636c3db9c",
                "7e200f4c-22c2-4c28-a27b-d5dfd4c93707",
                "71b4b0fc-adec-4f29-8d61-35eb6eeefcf3",
                "cacbb184-6864-4c7b-8cfb-333d9e56f4d4"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b52c7a33-dfab-4731-9688-dc199c6e772d",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\promociones.test.js",
              "file": "\\test\\promociones.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "d5f29cae-969f-4e7f-8e73-a7bf1dc4ca76",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API promociones Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "f1b404fc-5637-4016-ba36-b3fab5e9802d",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "d5f29cae-969f-4e7f-8e73-a7bf1dc4ca76",
                "f1b404fc-5637-4016-ba36-b3fab5e9802d"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "edda96ec-aa22-4a8b-955b-49dadbb71bb8",
          "title": "Pruebas de la API proveedores",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\proveedores.test.js",
          "file": "\\test\\proveedores.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API proveedores\"",
              "fullTitle": "Pruebas de la API proveedores \"before all\" hook in \"Pruebas de la API proveedores\"",
              "timedOut": false,
              "duration": 15,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await proveedoresModelo.obtenerTodo();\n        getId = await proveedoresModelo.obtenerProveedorId(1);",
              "err": {},
              "uuid": "35f13968-8e50-4c12-80b2-6c5035c0c2e9",
              "parentUUID": "edda96ec-aa22-4a8b-955b-49dadbb71bb8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API proveedores\"",
              "fullTitle": "Pruebas de la API proveedores \"after all\" hook in \"Pruebas de la API proveedores\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "c8031beb-655c-426d-b3ea-6cd4f8e7a9e6",
              "parentUUID": "edda96ec-aa22-4a8b-955b-49dadbb71bb8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7ae41d13-ffe6-49c3-a1ea-5de04dd284a1",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\proveedores.test.js",
              "file": "\\test\\proveedores.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "e5381593-57c4-43cf-b15c-5903ffc618d7",
                  "parentUUID": "7ae41d13-ffe6-49c3-a1ea-5de04dd284a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/proveedores.test.js:27:38)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "bdd10900-e05c-4ac2-9f06-a11d67c70759",
                  "parentUUID": "7ae41d13-ffe6-49c3-a1ea-5de04dd284a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Devuelve el código de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "f67f2d71-ccfa-4276-9a73-65826a807c9b",
                  "parentUUID": "7ae41d13-ffe6-49c3-a1ea-5de04dd284a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "a895f7d0-10d3-43eb-bbd0-1d347326d418",
                  "parentUUID": "7ae41d13-ffe6-49c3-a1ea-5de04dd284a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {
                    "message": "AssertionError: Target cannot be null or undefined.",
                    "estack": "AssertionError: Target cannot be null or undefined.\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/proveedores.test.js:39:40)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "ea042407-22df-4e3a-a568-3e74b9814277",
                  "parentUUID": "7ae41d13-ffe6-49c3-a1ea-5de04dd284a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e5381593-57c4-43cf-b15c-5903ffc618d7",
                "f67f2d71-ccfa-4276-9a73-65826a807c9b",
                "a895f7d0-10d3-43eb-bbd0-1d347326d418"
              ],
              "failures": [
                "bdd10900-e05c-4ac2-9f06-a11d67c70759",
                "ea042407-22df-4e3a-a568-3e74b9814277"
              ],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ebb023a2-b021-4d22-a0aa-baaa7c3e45c3",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\proveedores.test.js",
              "file": "\\test\\proveedores.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/proveedores.test.js:53:33)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "71170e11-26c3-4a0a-af59-42dfc3db5e98",
                  "parentUUID": "ebb023a2-b021-4d22-a0aa-baaa7c3e45c3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API proveedores Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "424d58d0-7359-441d-ad78-e1ac7e474773",
                  "parentUUID": "ebb023a2-b021-4d22-a0aa-baaa7c3e45c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "424d58d0-7359-441d-ad78-e1ac7e474773"
              ],
              "failures": [
                "71170e11-26c3-4a0a-af59-42dfc3db5e98"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5a3fdd4-69b9-4520-a29c-65ab7dd565de",
          "title": "Pruebas de la API restaurantes",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\restaurantes.test.js",
          "file": "\\test\\restaurantes.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API restaurantes\"",
              "fullTitle": "Pruebas de la API restaurantes \"before all\" hook in \"Pruebas de la API restaurantes\"",
              "timedOut": false,
              "duration": 10,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await restaurantesModelo.obtenerTodo();\n        getId = await restaurantesModelo.obtenerRestauranteId(1);",
              "err": {},
              "uuid": "b9dee763-b971-4d78-91e0-cd18170040f0",
              "parentUUID": "e5a3fdd4-69b9-4520-a29c-65ab7dd565de",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API restaurantes\"",
              "fullTitle": "Pruebas de la API restaurantes \"after all\" hook in \"Pruebas de la API restaurantes\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "6d030885-b557-4522-b03c-7a8509429680",
              "parentUUID": "e5a3fdd4-69b9-4520-a29c-65ab7dd565de",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "eea593a3-faba-47d7-90a3-4bd9faaa1986",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\restaurantes.test.js",
              "file": "\\test\\restaurantes.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "7fbb6690-09f5-468d-84b8-d446191ecf52",
                  "parentUUID": "eea593a3-faba-47d7-90a3-4bd9faaa1986",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/restaurantes.test.js:27:38)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "1a2bd0e1-02b5-4f69-b13c-835879bf0ba3",
                  "parentUUID": "eea593a3-faba-47d7-90a3-4bd9faaa1986",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Devuelve el código de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "f1f2d86f-ef24-414a-b509-5eec4cb769ae",
                  "parentUUID": "eea593a3-faba-47d7-90a3-4bd9faaa1986",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "e94db397-ed56-4572-acd2-f640d07a24ee",
                  "parentUUID": "eea593a3-faba-47d7-90a3-4bd9faaa1986",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {
                    "message": "AssertionError: Target cannot be null or undefined.",
                    "estack": "AssertionError: Target cannot be null or undefined.\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/restaurantes.test.js:39:40)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "9f1a83ef-8535-4f34-a66e-3518b7622083",
                  "parentUUID": "eea593a3-faba-47d7-90a3-4bd9faaa1986",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7fbb6690-09f5-468d-84b8-d446191ecf52",
                "f1f2d86f-ef24-414a-b509-5eec4cb769ae",
                "e94db397-ed56-4572-acd2-f640d07a24ee"
              ],
              "failures": [
                "1a2bd0e1-02b5-4f69-b13c-835879bf0ba3",
                "9f1a83ef-8535-4f34-a66e-3518b7622083"
              ],
              "pending": [],
              "skipped": [],
              "duration": 45,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ff790cd8-ac07-4500-804b-38a0557b4eac",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\restaurantes.test.js",
              "file": "\\test\\restaurantes.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/restaurantes.test.js:53:33)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "babd738e-63f1-4cc8-b009-77556f0f4201",
                  "parentUUID": "ff790cd8-ac07-4500-804b-38a0557b4eac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API restaurantes Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "92ba1dbd-2b5e-457f-a723-694f669bfd61",
                  "parentUUID": "ff790cd8-ac07-4500-804b-38a0557b4eac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92ba1dbd-2b5e-457f-a723-694f669bfd61"
              ],
              "failures": [
                "babd738e-63f1-4cc8-b009-77556f0f4201"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb6cb705-6484-4fc0-a264-634513491f56",
          "title": "Pruebas de la API usuarios",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\usuarios.test.js",
          "file": "\\test\\usuarios.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API usuarios\"",
              "fullTitle": "Pruebas de la API usuarios \"before all\" hook in \"Pruebas de la API usuarios\"",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "getAll = await usuariosModel.obtenerTodo();\n        getId = await usuariosModel.findById(1);",
              "err": {
                "message": "TypeError: usuariosModel.obtenerTodo is not a function",
                "estack": "TypeError: usuariosModel.obtenerTodo is not a function\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/usuarios.test.js:11:39)\n    at process.processImmediate (node:internal/timers:478:21)",
                "diff": null
              },
              "uuid": "02e0649f-ad3d-40ee-b636-bc2507960b51",
              "parentUUID": "fb6cb705-6484-4fc0-a264-634513491f56",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API usuarios\"",
              "fullTitle": "Pruebas de la API usuarios \"after all\" hook in \"Pruebas de la API usuarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "22b6dbe6-db87-4d6a-8bc3-590009489c3d",
              "parentUUID": "fb6cb705-6484-4fc0-a264-634513491f56",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "236c1ba3-f915-44ec-9c13-ca0a8d5d55b7",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\usuarios.test.js",
              "file": "\\test\\usuarios.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "5b840049-e668-4e6e-8fd6-0277a2c20c47",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {},
                  "uuid": "ca8acc96-8fa1-45c8-a1eb-26419bb5eb75",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Devuelve el código de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "6c27c048-3c1e-4d1c-9339-f525016c0acb",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "6ff9c5a3-7b6a-40f1-8041-05f61ae10072",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {},
                  "uuid": "08ff7113-71f0-4a43-8683-591fd7f666d9",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "5b840049-e668-4e6e-8fd6-0277a2c20c47",
                "ca8acc96-8fa1-45c8-a1eb-26419bb5eb75",
                "6c27c048-3c1e-4d1c-9339-f525016c0acb",
                "6ff9c5a3-7b6a-40f1-8041-05f61ae10072",
                "08ff7113-71f0-4a43-8683-591fd7f666d9"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a71b8dea-643e-4af7-aad8-d6680363ec2c",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\usuarios.test.js",
              "file": "\\test\\usuarios.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {},
                  "uuid": "b5540667-3b86-401d-91f8-3abe6b22c8f0",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API usuarios Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "a3ca376b-a17b-4d16-95dd-5da57dd4d779",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "b5540667-3b86-401d-91f8-3abe6b22c8f0",
                "a3ca376b-a17b-4d16-95dd-5da57dd4d779"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ec2d9790-f154-42a0-8806-63dd2b611379",
          "title": "Validation Functions",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
          "file": "\\test\\validations.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a23f4184-e416-4be3-b78e-16f92f752409",
              "title": "SQL Injection Prevention (hasUnsafeCharacters)",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if input contains single quotes",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains single quotes",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters(\"O'Reilly\")).to.be.true;",
                  "err": {},
                  "uuid": "f5ae3944-451f-4b64-9637-7e081c7d95e1",
                  "parentUUID": "a23f4184-e416-4be3-b78e-16f92f752409",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains double quotes",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains double quotes",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('He said \"Hello\"')).to.be.true;",
                  "err": {},
                  "uuid": "056ef66c-004d-4fa6-971c-10ef2c25b61d",
                  "parentUUID": "a23f4184-e416-4be3-b78e-16f92f752409",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains backslash",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains backslash",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('C:\\\\Windows')).to.be.true;",
                  "err": {},
                  "uuid": "d74440ec-58af-4215-9a00-f8ab1c6c8238",
                  "parentUUID": "a23f4184-e416-4be3-b78e-16f92f752409",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains semicolon",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains semicolon",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('DROP TABLE users;')).to.be.true;",
                  "err": {},
                  "uuid": "df020daa-b3e3-4829-8214-9f00527be54b",
                  "parentUUID": "a23f4184-e416-4be3-b78e-16f92f752409",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if input contains double dash",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return true if input contains double dash",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('SELECT * FROM users --')).to.be.true;",
                  "err": {},
                  "uuid": "068917e0-fb6d-4c6f-a49c-12e4dbdd4245",
                  "parentUUID": "a23f4184-e416-4be3-b78e-16f92f752409",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for safe input",
                  "fullTitle": "Validation Functions SQL Injection Prevention (hasUnsafeCharacters) should return false for safe input",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.hasUnsafeCharacters('SafeInput123')).to.be.false;",
                  "err": {},
                  "uuid": "adb0d54c-2a26-4fbb-a46c-b03daec6e21d",
                  "parentUUID": "a23f4184-e416-4be3-b78e-16f92f752409",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f5ae3944-451f-4b64-9637-7e081c7d95e1",
                "056ef66c-004d-4fa6-971c-10ef2c25b61d",
                "d74440ec-58af-4215-9a00-f8ab1c6c8238",
                "df020daa-b3e3-4829-8214-9f00527be54b",
                "068917e0-fb6d-4c6f-a49c-12e4dbdd4245",
                "adb0d54c-2a26-4fbb-a46c-b03daec6e21d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fcb47db7-1499-4872-8ebe-2131e2edf4aa",
              "title": "Category Name Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid category name",
                  "fullTitle": "Validation Functions Category Name Validation should return true for a valid category name",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('Desserts')).to.be.true;",
                  "err": {},
                  "uuid": "36c53591-afd8-43bd-a669-436efe55ea9b",
                  "parentUUID": "fcb47db7-1499-4872-8ebe-2131e2edf4aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a name with special characters",
                  "fullTitle": "Validation Functions Category Name Validation should return false for a name with special characters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName(\"Cakes@2024\")).to.be.false;",
                  "err": {
                    "message": "AssertionError: expected true to be false",
                    "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:32:71)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "8e42592e-4fc9-4a70-b5ab-f287024cca25",
                  "parentUUID": "fcb47db7-1499-4872-8ebe-2131e2edf4aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an empty string",
                  "fullTitle": "Validation Functions Category Name Validation should return false for an empty string",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('')).to.be.false;",
                  "err": {},
                  "uuid": "74af191b-12b0-4e2a-b492-c03089c76b53",
                  "parentUUID": "fcb47db7-1499-4872-8ebe-2131e2edf4aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a name exceeding 50 characters",
                  "fullTitle": "Validation Functions Category Name Validation should return false for a name exceeding 50 characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('a'.repeat(51))).to.be.false;",
                  "err": {},
                  "uuid": "63462531-c718-48d0-8bbf-173d8cde33bf",
                  "parentUUID": "fcb47db7-1499-4872-8ebe-2131e2edf4aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a name with exactly 50 characters",
                  "fullTitle": "Validation Functions Category Name Validation should return true for a name with exactly 50 characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateCategoryName('a'.repeat(50))).to.be.true;",
                  "err": {},
                  "uuid": "d98035f9-ac7a-4524-ad64-ccc098fad955",
                  "parentUUID": "fcb47db7-1499-4872-8ebe-2131e2edf4aa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36c53591-afd8-43bd-a669-436efe55ea9b",
                "74af191b-12b0-4e2a-b492-c03089c76b53",
                "63462531-c718-48d0-8bbf-173d8cde33bf",
                "d98035f9-ac7a-4524-ad64-ccc098fad955"
              ],
              "failures": [
                "8e42592e-4fc9-4a70-b5ab-f287024cca25"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7c833948-34a2-44d8-b5ef-d2290e8585c1",
              "title": "Email Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid email address",
                  "fullTitle": "Validation Functions Email Validation should return true for a valid email address",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test@example.com')).to.be.true;",
                  "err": {},
                  "uuid": "8757302b-0953-4deb-9d94-ccd8ca339d4b",
                  "parentUUID": "7c833948-34a2-44d8-b5ef-d2290e8585c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email without \"@\"",
                  "fullTitle": "Validation Functions Email Validation should return false for an email without \"@\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('testexample.com')).to.be.false;",
                  "err": {},
                  "uuid": "8a43d779-d980-42ce-a0e8-7b7be42f16b0",
                  "parentUUID": "7c833948-34a2-44d8-b5ef-d2290e8585c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email without domain",
                  "fullTitle": "Validation Functions Email Validation should return false for an email without domain",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test@.com')).to.be.false;",
                  "err": {},
                  "uuid": "ee79fd31-81cf-41f0-a32d-991e4b7f9f4f",
                  "parentUUID": "7c833948-34a2-44d8-b5ef-d2290e8585c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email with spaces",
                  "fullTitle": "Validation Functions Email Validation should return false for an email with spaces",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test @example.com')).to.be.false;",
                  "err": {},
                  "uuid": "aeefc5ec-f4da-4e83-a49f-aef8f75bf706",
                  "parentUUID": "7c833948-34a2-44d8-b5ef-d2290e8585c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an email with SQL injection characters",
                  "fullTitle": "Validation Functions Email Validation should return false for an email with SQL injection characters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateEmail('test@example.com; DROP TABLE users;')).to.be.false;",
                  "err": {},
                  "uuid": "155cb325-494f-4766-ac47-9c035e6fcdcd",
                  "parentUUID": "7c833948-34a2-44d8-b5ef-d2290e8585c1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8757302b-0953-4deb-9d94-ccd8ca339d4b",
                "8a43d779-d980-42ce-a0e8-7b7be42f16b0",
                "ee79fd31-81cf-41f0-a32d-991e4b7f9f4f",
                "aeefc5ec-f4da-4e83-a49f-aef8f75bf706",
                "155cb325-494f-4766-ac47-9c035e6fcdcd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "05b4510a-fd6c-4866-b315-abea0d016f8e",
              "title": "Password Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid password",
                  "fullTitle": "Validation Functions Password Validation should return true for a valid password",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('SecurePass123!')).to.be.true;",
                  "err": {
                    "message": "AssertionError: expected false to be true",
                    "estack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:67:71)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- false\n+ true\n"
                  },
                  "uuid": "8fe2624f-a011-4a69-8e09-766455b01f36",
                  "parentUUID": "05b4510a-fd6c-4866-b315-abea0d016f8e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password shorter than 8 characters",
                  "fullTitle": "Validation Functions Password Validation should return false for a password shorter than 8 characters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('Short1')).to.be.false;",
                  "err": {},
                  "uuid": "b9195cfe-bbd2-4cfd-aa05-62a336c5580a",
                  "parentUUID": "05b4510a-fd6c-4866-b315-abea0d016f8e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password longer than 20 characters",
                  "fullTitle": "Validation Functions Password Validation should return false for a password longer than 20 characters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('a'.repeat(21))).to.be.false;",
                  "err": {},
                  "uuid": "abc2b1c1-ad33-4ce1-a913-d788682e963c",
                  "parentUUID": "05b4510a-fd6c-4866-b315-abea0d016f8e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password without numbers",
                  "fullTitle": "Validation Functions Password Validation should return false for a password without numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('PasswordOnly')).to.be.false;",
                  "err": {},
                  "uuid": "4ecdeea6-e2f5-432a-abe0-55c37c80b36c",
                  "parentUUID": "05b4510a-fd6c-4866-b315-abea0d016f8e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password with spaces",
                  "fullTitle": "Validation Functions Password Validation should return false for a password with spaces",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('Pass word123')).to.be.false;",
                  "err": {},
                  "uuid": "da42dda3-b39e-4e6a-aef1-f249c88fa66d",
                  "parentUUID": "05b4510a-fd6c-4866-b315-abea0d016f8e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a password with SQL injection patterns",
                  "fullTitle": "Validation Functions Password Validation should return false for a password with SQL injection patterns",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePassword('Passw0rd;--')).to.be.false;",
                  "err": {},
                  "uuid": "1441280c-2486-4229-8b0a-f106c34a258e",
                  "parentUUID": "05b4510a-fd6c-4866-b315-abea0d016f8e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9195cfe-bbd2-4cfd-aa05-62a336c5580a",
                "abc2b1c1-ad33-4ce1-a913-d788682e963c",
                "4ecdeea6-e2f5-432a-abe0-55c37c80b36c",
                "da42dda3-b39e-4e6a-aef1-f249c88fa66d",
                "1441280c-2486-4229-8b0a-f106c34a258e"
              ],
              "failures": [
                "8fe2624f-a011-4a69-8e09-766455b01f36"
              ],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0521b7cb-6884-4ed4-9622-a66ad81c8f23",
              "title": "Phone Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid 10-digit phone number",
                  "fullTitle": "Validation Functions Phone Validation should return true for a valid 10-digit phone number",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('1234567890')).to.be.true;",
                  "err": {},
                  "uuid": "acde56a9-5ff4-445b-b913-baa516479b98",
                  "parentUUID": "0521b7cb-6884-4ed4-9622-a66ad81c8f23",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number with letters",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number with letters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('123ABC7890')).to.be.false;",
                  "err": {},
                  "uuid": "1a531a4f-0cf2-44b0-bd9a-e668331d839c",
                  "parentUUID": "0521b7cb-6884-4ed4-9622-a66ad81c8f23",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number with special characters",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number with special characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('123-456-7890')).to.be.false;",
                  "err": {},
                  "uuid": "c1f9556f-4a14-4886-8c59-048ffbcf5461",
                  "parentUUID": "0521b7cb-6884-4ed4-9622-a66ad81c8f23",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number shorter than 10 digits",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number shorter than 10 digits",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('12345')).to.be.false;",
                  "err": {},
                  "uuid": "31387b6d-b7e7-4b7d-9f1e-750023e2acb6",
                  "parentUUID": "0521b7cb-6884-4ed4-9622-a66ad81c8f23",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a phone number longer than 10 digits",
                  "fullTitle": "Validation Functions Phone Validation should return false for a phone number longer than 10 digits",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePhone('123456789012')).to.be.false;",
                  "err": {
                    "message": "AssertionError: expected true to be false",
                    "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:101:66)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "fe8fa2b0-ee25-41f3-b106-14782222982d",
                  "parentUUID": "0521b7cb-6884-4ed4-9622-a66ad81c8f23",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "acde56a9-5ff4-445b-b913-baa516479b98",
                "1a531a4f-0cf2-44b0-bd9a-e668331d839c",
                "c1f9556f-4a14-4886-8c59-048ffbcf5461",
                "31387b6d-b7e7-4b7d-9f1e-750023e2acb6"
              ],
              "failures": [
                "fe8fa2b0-ee25-41f3-b106-14782222982d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3dded04f-b45e-4ea8-ba67-c6b5bcc4669c",
              "title": "Price Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid price",
                  "fullTitle": "Validation Functions Price Validation should return true for a valid price",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice(99.99)).to.be.true;",
                  "err": {},
                  "uuid": "abfec576-ecbd-44ec-82e6-cc6d924f5f47",
                  "parentUUID": "3dded04f-b45e-4ea8-ba67-c6b5bcc4669c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a negative price",
                  "fullTitle": "Validation Functions Price Validation should return false for a negative price",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice(-9.99)).to.be.false;",
                  "err": {},
                  "uuid": "4ee59a4b-c8d5-47a1-88bc-abc9922b5538",
                  "parentUUID": "3dded04f-b45e-4ea8-ba67-c6b5bcc4669c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a price of 0",
                  "fullTitle": "Validation Functions Price Validation should return true for a price of 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice(0)).to.be.true;",
                  "err": {},
                  "uuid": "2970510f-0add-4bfa-ad7b-528a6a6d5a3a",
                  "parentUUID": "3dded04f-b45e-4ea8-ba67-c6b5bcc4669c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-numeric input",
                  "fullTitle": "Validation Functions Price Validation should return false for non-numeric input",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validatePrice('fifty')).to.be.false;",
                  "err": {},
                  "uuid": "e34bb34b-d92d-49da-9f46-1bcd72c34a68",
                  "parentUUID": "3dded04f-b45e-4ea8-ba67-c6b5bcc4669c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "abfec576-ecbd-44ec-82e6-cc6d924f5f47",
                "4ee59a4b-c8d5-47a1-88bc-abc9922b5538",
                "2970510f-0add-4bfa-ad7b-528a6a6d5a3a",
                "e34bb34b-d92d-49da-9f46-1bcd72c34a68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ce1d0799-b143-4e94-906c-3d9d72371366",
              "title": "Rating Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid rating of 1",
                  "fullTitle": "Validation Functions Rating Validation should return true for a valid rating of 1",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(1)).to.be.true;",
                  "err": {},
                  "uuid": "44955091-4438-4b3f-a095-86587aba21a4",
                  "parentUUID": "ce1d0799-b143-4e94-906c-3d9d72371366",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a valid rating of 5",
                  "fullTitle": "Validation Functions Rating Validation should return true for a valid rating of 5",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(5)).to.be.true;",
                  "err": {},
                  "uuid": "1560eda0-3c50-431b-9d2a-454a0b38de14",
                  "parentUUID": "ce1d0799-b143-4e94-906c-3d9d72371366",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a rating less than 1",
                  "fullTitle": "Validation Functions Rating Validation should return false for a rating less than 1",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(0)).to.be.false;",
                  "err": {},
                  "uuid": "3a4dccd4-4b48-4b3b-a129-3b06d8a512a4",
                  "parentUUID": "ce1d0799-b143-4e94-906c-3d9d72371366",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a rating greater than 5",
                  "fullTitle": "Validation Functions Rating Validation should return false for a rating greater than 5",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(6)).to.be.false;",
                  "err": {},
                  "uuid": "aad86f21-65c2-40f3-858a-84ebb223beaf",
                  "parentUUID": "ce1d0799-b143-4e94-906c-3d9d72371366",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a decimal rating",
                  "fullTitle": "Validation Functions Rating Validation should return false for a decimal rating",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating(4.5)).to.be.false;",
                  "err": {},
                  "uuid": "e89add6a-1dcc-41da-b7fe-8630a012ed89",
                  "parentUUID": "ce1d0799-b143-4e94-906c-3d9d72371366",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-numeric rating",
                  "fullTitle": "Validation Functions Rating Validation should return false for non-numeric rating",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateRating('excellent')).to.be.false;",
                  "err": {},
                  "uuid": "161785f7-b422-4d75-93ab-912adc7ac8b5",
                  "parentUUID": "ce1d0799-b143-4e94-906c-3d9d72371366",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "44955091-4438-4b3f-a095-86587aba21a4",
                "1560eda0-3c50-431b-9d2a-454a0b38de14",
                "3a4dccd4-4b48-4b3b-a129-3b06d8a512a4",
                "aad86f21-65c2-40f3-858a-84ebb223beaf",
                "e89add6a-1dcc-41da-b7fe-8630a012ed89",
                "161785f7-b422-4d75-93ab-912adc7ac8b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cc10e1bd-5418-4fd5-b4c3-c8e7535a6fdd",
              "title": "Date Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid date",
                  "fullTitle": "Validation Functions Date Validation should return true for a valid date",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('2024-12-31')).to.be.true;",
                  "err": {
                    "message": "AssertionError: expected false to be true",
                    "estack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:146:63)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- false\n+ true\n"
                  },
                  "uuid": "471d48c5-9846-4392-824c-3d4dd4b4d2e0",
                  "parentUUID": "cc10e1bd-5418-4fd5-b4c3-c8e7535a6fdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an invalid date format",
                  "fullTitle": "Validation Functions Date Validation should return false for an invalid date format",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('31/12/2024')).to.be.false;",
                  "err": {},
                  "uuid": "c0c4f200-0be9-4ef7-ab3e-d7953b754436",
                  "parentUUID": "cc10e1bd-5418-4fd5-b4c3-c8e7535a6fdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a non-existent date",
                  "fullTitle": "Validation Functions Date Validation should return false for a non-existent date",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('2024-02-30')).to.be.false;",
                  "err": {},
                  "uuid": "3d809d5b-c330-4262-9f1e-52f3d8430f06",
                  "parentUUID": "cc10e1bd-5418-4fd5-b4c3-c8e7535a6fdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-date strings",
                  "fullTitle": "Validation Functions Date Validation should return false for non-date strings",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateDate('not-a-date')).to.be.false;",
                  "err": {},
                  "uuid": "3048b21f-5199-4c16-8ecd-bf2950df5ba6",
                  "parentUUID": "cc10e1bd-5418-4fd5-b4c3-c8e7535a6fdd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c0c4f200-0be9-4ef7-ab3e-d7953b754436",
                "3d809d5b-c330-4262-9f1e-52f3d8430f06",
                "3048b21f-5199-4c16-8ecd-bf2950df5ba6"
              ],
              "failures": [
                "471d48c5-9846-4392-824c-3d4dd4b4d2e0"
              ],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ec27f84a-bbd5-440d-ac50-5ad297425283",
              "title": "Integer Validation",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\validations.test.js",
              "file": "\\test\\validations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for a valid positive integer",
                  "fullTitle": "Validation Functions Integer Validation should return true for a valid positive integer",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(42)).to.be.true;",
                  "err": {},
                  "uuid": "de74cc83-a158-4b7c-80d5-016155125046",
                  "parentUUID": "ec27f84a-bbd5-440d-ac50-5ad297425283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for zero",
                  "fullTitle": "Validation Functions Integer Validation should return true for zero",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(0)).to.be.true;",
                  "err": {},
                  "uuid": "cfe73f78-abf4-4247-95bc-d036aaed0509",
                  "parentUUID": "ec27f84a-bbd5-440d-ac50-5ad297425283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a negative integer",
                  "fullTitle": "Validation Functions Integer Validation should return false for a negative integer",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(-5)).to.be.false;",
                  "err": {
                    "message": "AssertionError: expected true to be false",
                    "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/validations.test.js:168:56)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "3a0309ec-b012-43ed-a004-fc30418658d2",
                  "parentUUID": "ec27f84a-bbd5-440d-ac50-5ad297425283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a decimal number",
                  "fullTitle": "Validation Functions Integer Validation should return false for a decimal number",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger(42.5)).to.be.false;",
                  "err": {},
                  "uuid": "7d14fc03-394e-48a9-a744-41487c66c279",
                  "parentUUID": "ec27f84a-bbd5-440d-ac50-5ad297425283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-numeric input",
                  "fullTitle": "Validation Functions Integer Validation should return false for non-numeric input",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(Validator.validateInteger('forty-two')).to.be.false;",
                  "err": {},
                  "uuid": "53ce67ce-bf41-440b-af7c-1e0d6070c490",
                  "parentUUID": "ec27f84a-bbd5-440d-ac50-5ad297425283",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de74cc83-a158-4b7c-80d5-016155125046",
                "cfe73f78-abf4-4247-95bc-d036aaed0509",
                "7d14fc03-394e-48a9-a744-41487c66c279",
                "53ce67ce-bf41-440b-af7c-1e0d6070c490"
              ],
              "failures": [
                "3a0309ec-b012-43ed-a004-fc30418658d2"
              ],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9f1b5fe0-8afd-40ad-bcd9-3af02201ef5c",
          "title": "Pruebas de la API ventas",
          "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\ventas.test.js",
          "file": "\\test\\ventas.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"before all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "getAll = await ventasModel.obtenerTodo();\n        getId = await ventasModel.obtenerVentaId(1);",
              "err": {},
              "uuid": "f4332658-ff0c-46f2-8aa6-1930d36195c3",
              "parentUUID": "9f1b5fe0-8afd-40ad-bcd9-3af02201ef5c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Pruebas de la API ventas\"",
              "fullTitle": "Pruebas de la API ventas \"after all\" hook in \"Pruebas de la API ventas\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cerrar el servidor de Express\nserver.close();",
              "err": {},
              "uuid": "141549cd-6513-4610-acab-98653cd3fa59",
              "parentUUID": "9f1b5fe0-8afd-40ad-bcd9-3af02201ef5c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9910f124-08cc-45a5-a660-aefaad1a4534",
              "title": "Pruebas del metodo GET",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\ventas.test.js",
              "file": "\\test\\ventas.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll).to.be.an('array');",
                  "err": {},
                  "uuid": "dd85e9c2-e1db-44cb-a859-5924d03781c0",
                  "parentUUID": "9910f124-08cc-45a5-a660-aefaad1a4534",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Hay objetos dentro del array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Hay objetos dentro del array",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/ventas.test.js:27:38)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "49d7bd18-6dc0-42d9-b2ef-69bfd89ca94d",
                  "parentUUID": "9910f124-08cc-45a5-a660-aefaad1a4534",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 200 para GET /ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el código de estado 200 para GET /ventas",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas');\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "23b4c038-e615-457b-a76a-b8ca85c30f7b",
                  "parentUUID": "9910f124-08cc-45a5-a660-aefaad1a4534",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Devuelve el código de estado 404 si no se encuentran ventas",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Devuelve el código de estado 404 si no se encuentran ventas",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await request(app).get('/api/ventas/9999'); // ID que no existe\nexpect(res.status).to.equal(404);",
                  "err": {},
                  "uuid": "b71df8b6-15b2-4013-b287-8dcc77a23cd2",
                  "parentUUID": "9910f124-08cc-45a5-a660-aefaad1a4534",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cada venta devuelta tiene los campos correctos",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET Cada venta devuelta tiene los campos correctos",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect( getAll[0]).to.have.property('id');\nexpect( getAll[0]).to.have.property('restaurant_id');\nexpect( getAll[0]).to.have.property('report_date');\nexpect( getAll[0]).to.have.property('total_sales');\nexpect( getAll[0]).to.have.property('created_at');\nexpect( getAll[0]).to.have.property('updated_at');\nexpect( getAll[0]).to.have.property('deleted_at');",
                  "err": {
                    "message": "AssertionError: Target cannot be null or undefined.",
                    "estack": "AssertionError: Target cannot be null or undefined.\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/ventas.test.js:39:40)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "558a99ed-76bc-484a-97ec-5af985a9d497",
                  "parentUUID": "9910f124-08cc-45a5-a660-aefaad1a4534",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd85e9c2-e1db-44cb-a859-5924d03781c0",
                "23b4c038-e615-457b-a76a-b8ca85c30f7b",
                "b71df8b6-15b2-4013-b287-8dcc77a23cd2"
              ],
              "failures": [
                "49d7bd18-6dc0-42d9-b2ef-69bfd89ca94d",
                "558a99ed-76bc-484a-97ec-5af985a9d497"
              ],
              "pending": [],
              "skipped": [],
              "duration": 81,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9f5289b4-8414-4e9c-8112-15a5c657603f",
              "title": "Pruebas del metodo GET venta por id",
              "fullFile": "C:\\Users\\Christian\\Documents\\UTCV\\Estructura de datos\\pruebas\\Pruebas\\ElFortin_APIs\\test\\ventas.test.js",
              "file": "\\test\\ventas.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Devuelve un objeto",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id Devuelve un objeto",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.an('object');",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at Context.<anonymous> (file:///C:/Users/Christian/Documents/UTCV/Estructura%20de%20datos/pruebas/Pruebas/ElFortin_APIs/test/ventas.test.js:53:33)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "7a3f75a0-76c5-4514-af52-c25d4774a9e5",
                  "parentUUID": "9f5289b4-8414-4e9c-8112-15a5c657603f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "No devuelve un array",
                  "fullTitle": "Pruebas de la API ventas Pruebas del metodo GET venta por id No devuelve un array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(getId).to.be.not.an('array');",
                  "err": {},
                  "uuid": "633d0dfc-dec5-4d9b-9d37-44799debeeb9",
                  "parentUUID": "9f5289b4-8414-4e9c-8112-15a5c657603f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "633d0dfc-dec5-4d9b-9d37-44799debeeb9"
              ],
              "failures": [
                "7a3f75a0-76c5-4514-af52-c25d4774a9e5"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}